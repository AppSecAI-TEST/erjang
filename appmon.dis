{file,"/Users/krab/Projects/clojure/appmon.beam"}.

{module,appmon}.

{exports,[{code_change,3,105},
          {handle_call,3,11},
          {handle_cast,2,13},
          {handle_info,2,15},
          {init,1,6},
          {module_info,0,244},
          {module_info,1,246},
          {start,0,2},
          {stop,0,4},
          {terminate,2,102}]}.

{attributes,[{behaviour,[gen_server]},
             {vsn,[15119363922521781921157886656135700378]}]}.

{comp_info,[{options,[{cwd,"/ldisk/daily_build/otp_prebuild_r12b.2007-12-04_15/otp_src_R12B-0/lib/appmon/src"},
                      {outdir,"/ldisk/daily_build/otp_prebuild_r12b.2007-12-04_15/otp_src_R12B-0/lib/appmon/src/../ebin"},
                      warn_obsolete_guard,debug_info]},
            {version,"4.5"},
            {time,{2007,12,4,15,1,14}},
            {source,"/ldisk/daily_build/otp_prebuild_r12b.2007-12-04_15/otp_src_R12B-0/lib/appmon/src/appmon.erl"}]}.

{function,start,0,2}.
  {label,1}.
    {func_info,{atom,appmon},{atom,start},0}.
  {label,2}.
    {move,nil,{x,2}}.
    {move,{atom,appmon},{x,1}}.
    {move,nil,{x,3}}.
    {move,{literal,{local,appmon}},{x,0}}.
    {call_ext_only,4,{extfunc,gen_server,start,4}}.

{function,stop,0,4}.
  {label,3}.
    {func_info,{atom,appmon},{atom,stop},0}.
  {label,4}.
    {move,{atom,stop},{x,1}}.
    {move,{atom,appmon},{x,0}}.
    {call_ext_only,2,{extfunc,gen_server,cast,2}}.

{function,init,1,6}.
  {label,5}.
    {func_info,{atom,appmon},{atom,init},1}.
  {label,6}.
    {test,is_nil,{f,5},[{x,0}]}.
    {allocate_zero,5,0}.
    {move,{atom,true},{x,1}}.
    {move,{atom,trap_exit},{x,0}}.
    {call_ext,2,{extfunc,erlang,process_flag,2}}.
    {move,{atom,true},{x,0}}.
    {call_ext,1,{extfunc,net_kernel,monitor_nodes,1}}.
    {bif,self,nofail,[],{x,0}}.
    {call_ext,1,{extfunc,appmon_lb,start,1}}.
    {move,{x,0},{y,4}}.
    {make_fun2,{appmon,'-init/1-fun-0-',1},0,62365403,0}.
    {move,{x,0},{y,3}}.
    {call_ext,0,{extfunc,erlang,nodes,0}}.
    {move,{x,0},{x,1}}.
    {move,{y,3},{x,0}}.
    {init,{y,3}}.
    {call_ext,2,{extfunc,lists,filter,2}}.
    {test_heap,2,1}.
    {bif,node,nofail,[],{x,1}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {move,{x,0},{y,3}}.
    {move,{y,4},{x,1}}.
    {call,2,{appmon,mk_mnodes,2}}.
    {move,{x,0},{y,2}}.
    {move,{literal,[{kernel,true}]},{x,0}}.
    {call_ext,1,{extfunc,gs,start,1}}.
    {bif,node,nofail,[],{x,1}}.
    {move,{x,0},{y,1}}.
    {call,2,{appmon,draw_win,2}}.
    {move,{x,0},{y,0}}.
    {make_fun2,{appmon,'-init/1-fun-1-',2},1,13039745,1}.
    {move,{y,3},{x,1}}.
    {init,{y,3}}.
    {call_ext,2,{extfunc,lists,foreach,2}}.
    {move,{atom,single},{x,1}}.
    {move,{y,0},{x,0}}.
    {call,2,{appmon,display_setopt,2}}.
    {move,{atom,time},{x,1}}.
    {move,{y,0},{x,0}}.
    {call,2,{appmon,display_setopt,2}}.
    {move,{atom,prog},{x,1}}.
    {move,{y,0},{x,0}}.
    {call,2,{appmon,display_setopt,2}}.
    {test_heap,14,0}.
    {put_list,{y,0},nil,{x,0}}.
    {put_tuple,8,{x,1}}.
    {put,{atom,state}}.
    {put,{y,1}}.
    {put,{x,0}}.
    {put,{atom,single}}.
    {put,{atom,time}}.
    {put,{atom,prog}}.
    {put,{y,4}}.
    {put,{y,2}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,1}}.
    {deallocate,5}.
    return.

{function,check_node,1,8}.
  {label,7}.
    {func_info,{atom,appmon},{atom,check_node},1}.
  {label,8}.
    {allocate,0,1}.
    {move,{atom,which},{x,2}}.
    {move,{literal,[appmon]},{x,3}}.
    {move,{atom,code},{x,1}}.
    {call_ext,4,{extfunc,rpc,call,4}}.
    {test,is_list,{f,9},[{x,0}]}.
    {move,{atom,true},{x,0}}.
    {deallocate,0}.
    return.
  {label,9}.
    {move,{atom,false},{x,0}}.
    {deallocate,0}.
    return.

{function,handle_call,3,11}.
  {label,10}.
    {func_info,{atom,appmon},{atom,handle_call},3}.
  {label,11}.
    {test,is_eq_exact,{f,10},[{x,0},{atom,norequest}]}.
    {test_heap,4,3}.
    {put_tuple,3,{x,0}}.
    {put,{atom,reply}}.
    {put,{atom,null}}.
    {put,{x,2}}.
    return.

{function,handle_cast,2,13}.
  {label,12}.
    {func_info,{atom,appmon},{atom,handle_cast},2}.
  {label,13}.
    {test,is_eq_exact,{f,12},[{x,0},{atom,stop}]}.
    {test_heap,4,2}.
    {put_tuple,3,{x,0}}.
    {put,{atom,stop}}.
    {put,{atom,normal}}.
    {put,{x,1}}.
    return.

{function,handle_info,2,15}.
  {label,14}.
    {func_info,{atom,appmon},{atom,handle_info},2}.
  {label,15}.
    {test,is_tuple,{f,75},[{x,0}]}.
    {select_tuple_arity,{x,0},
                        {f,76},
                        {list,[2,{f,16},3,{f,27},5,{f,29}]}}.
  {label,16}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {test,is_atom,{f,76},[{x,2}]}.
    {select_val,{x,2},
                {f,76},
                {list,[{atom,nodedown},{f,17},{atom,nodeup},{f,21}]}}.
  {label,17}.
    {allocate_zero,6,4}.
    {test,is_tuple,{f,78},[{x,1}]}.
    {test,test_arity,{f,78},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},2,{x,2}}.
    {get_tuple_element,{x,1},6,{x,4}}.
    {get_tuple_element,{x,1},7,{x,5}}.
    {test,is_eq_exact,{f,78},[{x,0},{atom,state}]}.
    {move,{x,1},{y,1}}.
    {move,{x,5},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{y,3}}.
    {move,{x,4},{y,4}}.
    {move,{x,2},{y,5}}.
    {call,2,{appmon,get_mnode,2}}.
    {test,is_eq_exact,{f,18},[{x,0},{atom,false}]}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{y,1}}.
    {deallocate,6}.
    return.
  {label,18}.
    {test,is_tuple,{f,77},[{x,0}]}.
    {test,test_arity,{f,77},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,77},[{x,1},{atom,mnode}]}.
    {move,{x,0},{x,1}}.
    {move,{atom,dead},{x,2}}.
    {move,{integer,3},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,3},{x,2}}.
    {init,{y,3}}.
    {move,{y,2},{x,0}}.
    {call,3,{appmon,replace_mnode,3}}.
    {move,{x,0},{y,3}}.
    {move,{y,5},{x,1}}.
    {move,{y,2},{x,0}}.
    {call,2,{appmon,get_win,2}}.
    {test,is_tuple,{f,19},[{x,0}]}.
    {test,test_arity,{f,98},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,98},[{x,1},{atom,ok}]}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,1,{appmon,display_nodedown,1}}.
    {move,{y,0},{x,0}}.
    {init,{y,0}}.
    {call,1,{appmon,draw_clear,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,5},{x,2}}.
    {init,{y,5}}.
    {move,{y,2},{x,0}}.
    {call,3,{appmon,replace_win,3}}.
    {jump,{f,20}}.
  {label,19}.
    {test,is_eq_exact,{f,98},[{x,0},{atom,false}]}.
    {move,{y,5},{x,0}}.
  {label,20}.
    {move,{x,0},{y,5}}.
    {move,{y,2},{x,1}}.
    {move,{y,4},{x,0}}.
    {init,{y,2}}.
    {init,{y,4}}.
    {call_ext,2,{extfunc,appmon_lb,remove_node,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,3},{x,2}}.
    {trim,5,1}.
    {move,{integer,8},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{y,0},{x,0},2}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,21}.
    {allocate_zero,5,4}.
    {move,{x,3},{x,0}}.
    {move,{x,1},{y,3}}.
    {move,{x,0},{y,4}}.
    {call,1,{appmon,check_node,1}}.
    {test,is_atom,{f,98},[{x,0}]}.
    {select_val,{x,0},
                {f,98},
                {list,[{atom,true},{f,22},{atom,false},{f,26}]}}.
  {label,22}.
    {test,is_tuple,{f,100},[{y,3}]}.
    {test,test_arity,{f,100},[{y,3},8]}.
    {get_tuple_element,{y,3},0,{x,0}}.
    {get_tuple_element,{y,3},2,{x,1}}.
    {get_tuple_element,{y,3},6,{x,2}}.
    {get_tuple_element,{y,3},7,{x,3}}.
    {test,is_eq_exact,{f,100},[{x,0},{atom,state}]}.
    {move,{x,1},{y,1}}.
    {move,{x,3},{x,1}}.
    {move,{y,4},{x,0}}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{y,2}}.
    {call,2,{appmon,get_mnode,2}}.
    {test,is_eq_exact,{f,23},[{x,0},{atom,false}]}.
    {move,{y,4},{x,1}}.
    {move,{y,1},{x,0}}.
    {call,2,{appmon,display_addnode,2}}.
  {label,23}.
    {move,{y,2},{x,1}}.
    {move,{y,4},{x,0}}.
    {call,2,{appmon,mk_mnode,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,2}}.
    {init,{y,0}}.
    {move,{y,4},{x,0}}.
    {call,3,{appmon,replace_mnode,3}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,4},{x,0}}.
    {move,{x,2},{y,1}}.
    {call,2,{appmon,get_win,2}}.
    {test,is_tuple,{f,24},[{x,0}]}.
    {test,test_arity,{f,98},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,98},[{x,1},{atom,ok}]}.
    {move,{y,4},{x,1}}.
    {move,{x,2},{x,0}}.
    {call,2,{appmon,display_nodeup,2}}.
    {jump,{f,25}}.
  {label,24}.
    {test,is_eq_exact,{f,98},[{x,0},{atom,false}]}.
  {label,25}.
    {move,{y,4},{x,1}}.
    {move,{atom,alive},{x,2}}.
    {move,{y,2},{x,0}}.
    {init,{y,2}}.
    {init,{y,4}}.
    {call_ext,3,{extfunc,appmon_lb,update_status,3}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,2}}.
    {trim,5,0}.
    {move,{integer,8},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,26}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{y,3}}.
    {deallocate,5}.
    return.
  {label,27}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {get_tuple_element,{x,0},2,{x,4}}.
    {test,is_eq_exact,{f,76},[{x,2},{atom,'EXIT'}]}.
    {test,is_eq_exact,{f,28},[{x,4},{atom,shutdown}]}.
    {test_heap,4,5}.
    {put_tuple,3,{x,0}}.
    {put,{atom,stop}}.
    {put,{x,4}}.
    {put,{x,1}}.
    return.
  {label,28}.
    {test,is_tuple,{f,79},[{x,1}]}.
    {test,test_arity,{f,79},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},1,{x,2}}.
    {test,is_eq_exact,{f,79},[{x,0},{atom,state}]}.
    {test,is_tuple,{f,76},[{x,2}]}.
    {test,test_arity,{f,76},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{x,4}}.
    {test,is_eq_exact,{f,76},[{x,0},{integer,0}]}.
    {test,is_eq_exact,{f,76},[{x,4},{x,3}]}.
    {test_heap,4,2}.
    {put_tuple,3,{x,0}}.
    {put,{atom,stop}}.
    {put,{atom,normal}}.
    {put,{x,1}}.
    return.
  {label,29}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {get_tuple_element,{x,0},2,{x,4}}.
    {get_tuple_element,{x,0},3,{x,5}}.
    {get_tuple_element,{x,0},4,{x,6}}.
    {test,is_atom,{f,76},[{x,2}]}.
    {select_val,{x,2},
                {f,76},
                {list,[{atom,gs},{f,30},{atom,delivery},{f,68}]}}.
  {label,30}.
    {test,is_atom,{f,76},[{x,4}]}.
    {select_val,{x,4},
                {f,76},
                {list,[{atom,configure},
                       {f,31},
                       {atom,buttonrelease},
                       {f,32},
                       {atom,click},
                       {f,34},
                       {atom,destroy},
                       {f,65},
                       {atom,buttonpress},
                       {f,67}]}}.
  {label,31}.
    {test,is_nonempty_list,{f,76},[{x,6}]}.
    {get_list,{x,6},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,76},[{x,8}]}.
    {allocate_zero,4,9}.
    {get_list,{x,8},{x,9},{x,10}}.
    {test,is_tuple,{f,81},[{x,1}]}.
    {test,test_arity,{f,81},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},2,{x,2}}.
    {test,is_eq_exact,{f,81},[{x,0},{atom,state}]}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,7},{y,1}}.
    {move,{x,9},{y,2}}.
    {move,{x,1},{y,3}}.
    {call,2,{appmon,get_win2,2}}.
    {test,is_tuple,{f,93},[{x,0}]}.
    {test,test_arity,{f,93},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,93},[{x,1},{atom,ok}]}.
    {move,{y,1},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{y,2},{x,2}}.
    {move,{x,0},{y,2}}.
    {init,{y,1}}.
    {call,3,{appmon,draw_resize,3}}.
    {move,{x,0},{y,1}}.
    {call,1,{appmon,display_scrollbar,1}}.
    {test,is_tuple,{f,80},[{y,2}]}.
    {test,test_arity,{f,80},[{y,2},15]}.
    {get_tuple_element,{y,2},0,{x,0}}.
    {get_tuple_element,{y,2},1,{x,1}}.
    {test,is_eq_exact,{f,80},[{x,0},{atom,win}]}.
    {move,{y,3},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{y,3}}.
    {trim,3,1}.
    {call,3,{appmon,replace_win,3}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {trim,1,0}.
    {move,{integer,3},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,32}.
    {test,is_nonempty_list,{f,76},[{x,6}]}.
    {get_list,{x,6},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,76},[{x,8}]}.
    {get_list,{x,8},{x,7},{x,9}}.
    {test,is_nonempty_list,{f,76},[{x,9}]}.
    {allocate_zero,6,10}.
    {get_list,{x,9},{x,10},{x,11}}.
    {test,is_tuple,{f,95},[{x,5}]}.
    {test,test_arity,{f,95},[{x,5},3]}.
    {get_tuple_element,{x,5},0,{x,0}}.
    {get_tuple_element,{x,5},1,{x,2}}.
    {get_tuple_element,{x,5},2,{x,3}}.
    {test,is_eq_exact,{f,95},[{x,0},{atom,canvasbutton}]}.
    {test,is_tuple,{f,95},[{x,3}]}.
    {test,test_arity,{f,95},[{x,3},3]}.
    {get_tuple_element,{x,3},0,{x,4}}.
    {get_tuple_element,{x,3},1,{x,6}}.
    {get_tuple_element,{x,3},2,{x,8}}.
    {test,is_eq_exact,{f,95},[{x,4},{atom,application}]}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {move,{x,7},{y,1}}.
    {move,{x,10},{y,2}}.
    {move,{x,0},{y,3}}.
    {move,{x,8},{y,4}}.
    {move,{x,6},{y,5}}.
    {call,1,{appmon,release,1}}.
    {test,is_tuple,{f,84},[{y,3}]}.
    {test,test_arity,{f,84},[{y,3},9]}.
    {get_tuple_element,{y,3},0,{x,0}}.
    {get_tuple_element,{y,3},5,{x,1}}.
    {get_tuple_element,{y,3},6,{x,2}}.
    {get_tuple_element,{y,3},7,{x,3}}.
    {get_tuple_element,{y,3},8,{x,4}}.
    {test,is_eq_exact,{f,84},[{x,0},{atom,canvasbutton}]}.
    {gc_bif,'+',{f,0},5,[{x,1},{x,3}],{x,0}}.
    {gc_bif,'+',{f,0},5,[{x,2},{x,4}],{x,3}}.
    {test,is_lt,{f,33},[{x,1},{y,1}]}.
    {test,is_lt,{f,33},[{y,1},{x,0}]}.
    {test,is_lt,{f,33},[{x,2},{y,2}]}.
    {test,is_lt,{f,33},[{y,2},{x,3}]}.
    {test,is_tuple,{f,83},[{y,0}]}.
    {test,test_arity,{f,83},[{y,0},8]}.
    {get_tuple_element,{y,0},0,{x,0}}.
    {get_tuple_element,{y,0},7,{x,1}}.
    {test,is_eq_exact,{f,83},[{x,0},{atom,state}]}.
    {init,{y,1}}.
    {init,{y,2}}.
    {init,{y,3}}.
    {move,{y,4},{x,0}}.
    {call,2,{appmon,get_mnode,2}}.
    {test,is_tuple,{f,82},[{x,0}]}.
    {test,test_arity,{f,82},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},4,{x,2}}.
    {test,is_eq_exact,{f,82},[{x,1},{atom,mnode}]}.
    {move,{integer,2},{x,1}}.
    {move,{y,5},{x,0}}.
    {call_ext,3,{extfunc,lists,keysearch,3}}.
    {test,is_tuple,{f,93},[{x,0}]}.
    {test,test_arity,{f,93},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,93},[{x,1},{atom,value}]}.
    {test,is_tuple,{f,93},[{x,2}]}.
    {test,test_arity,{f,93},[{x,2},3]}.
    {get_tuple_element,{x,2},0,{x,2}}.
    {move,{y,5},{x,1}}.
    {move,{y,4},{x,0}}.
    {init,{y,4}}.
    {init,{y,5}}.
    {call_ext,3,{extfunc,appmon_a,start,3}}.
  {label,33}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{y,0}}.
    {deallocate,6}.
    return.
  {label,34}.
    {allocate_zero,9,6}.
    {bif,node,nofail,[],{x,0}}.
    {test,is_tuple,{f,58},[{x,5}]}.
    {select_tuple_arity,{x,5},{f,64},{list,[2,{f,35},3,{f,39}]}}.
  {label,35}.
    {get_tuple_element,{x,5},0,{x,2}}.
    {get_tuple_element,{x,5},1,{x,3}}.
    {test,is_atom,{f,64},[{x,2}]}.
    {select_val,{x,2},
                {f,64},
                {list,[{atom,close},{f,36},{atom,window_mode},{f,38}]}}.
  {label,36}.
    {test,is_tuple,{f,91},[{x,1}]}.
    {test,test_arity,{f,91},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},2,{x,2}}.
    {test,is_eq_exact,{f,91},[{x,0},{atom,state}]}.
    {move,{x,1},{y,6}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,0},{y,7}}.
    {move,{x,1},{y,8}}.
    {call,2,{appmon,get_win2,2}}.
    {test,is_tuple,{f,93},[{x,0}]}.
    {test,test_arity,{f,93},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,93},[{x,1},{atom,ok}]}.
    {move,{y,7},{x,0}}.
    {move,{x,2},{y,7}}.
    {call_ext,1,{extfunc,gs,destroy,1}}.
    {test,is_tuple,{f,86},[{y,7}]}.
    {test,test_arity,{f,86},[{y,7},15]}.
    {get_tuple_element,{y,7},0,{x,0}}.
    {get_tuple_element,{y,7},1,{x,1}}.
    {test,is_eq_exact,{f,86},[{x,0},{atom,win}]}.
    {move,{x,1},{x,0}}.
    {move,{y,8},{x,1}}.
    {init,{y,7}}.
    {init,{y,8}}.
    {call,2,{appmon,remove_win,2}}.
    {test,is_nil,{f,37},[{x,0}]}.
    {test_heap,4,0}.
    {put_tuple,3,{x,0}}.
    {put,{atom,stop}}.
    {put,{atom,normal}}.
    {put,{y,6}}.
    {deallocate,9}.
    return.
  {label,37}.
    {move,{y,6},{x,1}}.
    {move,{x,0},{x,2}}.
    {trim,9,0}.
    {move,{integer,3},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,38}.
    {move,{x,3},{x,0}}.
    {move,{x,1},{y,7}}.
    {move,{x,0},{y,8}}.
    {make_fun2,{appmon,'-handle_info/2-fun-0-',2},2,133841446,1}.
    {test,is_tuple,{f,91},[{y,7}]}.
    {test,test_arity,{f,91},[{y,7},8]}.
    {get_tuple_element,{y,7},0,{x,1}}.
    {get_tuple_element,{y,7},2,{x,2}}.
    {test,is_eq_exact,{f,91},[{x,1},{atom,state}]}.
    {move,{x,2},{x,1}}.
    {call_ext,2,{extfunc,lists,foreach,2}}.
    {move,{y,7},{x,1}}.
    {move,{y,8},{x,2}}.
    {trim,9,0}.
    {move,{integer,4},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,39}.
    {get_tuple_element,{x,5},0,{x,2}}.
    {get_tuple_element,{x,5},1,{x,3}}.
    {get_tuple_element,{x,5},2,{x,4}}.
    {test,is_atom,{f,64},[{x,2}]}.
    {select_val,{x,2},
                {f,64},
                {list,[{atom,action},
                       {f,40},
                       {atom,node},
                       {f,44},
                       {atom,option},
                       {f,54}]}}.
  {label,40}.
    {test,is_tuple,{f,91},[{x,1}]}.
    {test,test_arity,{f,91},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,2}}.
    {get_tuple_element,{x,1},2,{x,5}}.
    {test,is_eq_exact,{f,91},[{x,2},{atom,state}]}.
    {move,{x,1},{y,7}}.
    {move,{x,0},{y,6}}.
    {move,{x,5},{x,1}}.
    {move,{x,4},{x,0}}.
    {move,{x,3},{y,8}}.
    {call,2,{appmon,get_win2,2}}.
    {test,is_tuple,{f,93},[{x,0}]}.
    {test,test_arity,{f,93},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,93},[{x,1},{atom,ok}]}.
    {test,is_tuple,{f,86},[{x,2}]}.
    {test,test_arity,{f,86},[{x,2},15]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{x,1}}.
    {test,is_eq_exact,{f,86},[{x,0},{atom,win}]}.
    {test,is_eq,{f,41},[{x,1},{y,6}]}.
    {test,is_ne_exact,{f,43},[{y,8},{atom,ping}]}.
    {move,{y,8},{x,1}}.
    {init,{y,6}}.
    {init,{y,8}}.
    {move,{atom,init},{x,0}}.
    {apply,0}.
    {jump,{f,43}}.
  {label,41}.
    {test,is_ne,{f,89},[{x,1},{y,6}]}.
    {test,is_eq_exact,{f,42},[{y,8},{atom,ping}]}.
    {init,{y,6}}.
    {init,{y,8}}.
    {move,{x,1},{x,0}}.
    {call_ext,1,{extfunc,net_adm,ping,1}}.
    {jump,{f,43}}.
  {label,42}.
    {move,{y,8},{x,2}}.
    {move,nil,{x,3}}.
    {move,{x,1},{x,0}}.
    {move,{atom,init},{x,1}}.
    {init,{y,6}}.
    {init,{y,8}}.
    {call_ext,4,{extfunc,rpc,cast,4}}.
  {label,43}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{y,7}}.
    {deallocate,9}.
    return.
  {label,44}.
    {test,is_tuple,{f,91},[{x,1}]}.
    {test,test_arity,{f,91},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},1,{x,2}}.
    {get_tuple_element,{x,1},2,{x,5}}.
    {get_tuple_element,{x,1},3,{x,6}}.
    {get_tuple_element,{x,1},4,{x,7}}.
    {get_tuple_element,{x,1},5,{x,8}}.
    {get_tuple_element,{x,1},7,{x,9}}.
    {test,is_eq_exact,{f,91},[{x,0},{atom,state}]}.
    {move,{x,1},{y,0}}.
    {move,{x,5},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,9},{y,3}}.
    {move,{x,8},{y,4}}.
    {move,{x,7},{y,5}}.
    {move,{x,6},{y,6}}.
    {move,{x,1},{y,7}}.
    {move,{x,2},{y,8}}.
    {call,2,{appmon,get_win,2}}.
    {test,is_tuple,{f,45},[{x,0}]}.
    {test,test_arity,{f,98},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,98},[{x,1},{atom,ok}]}.
    {test,is_tuple,{f,86},[{x,2}]}.
    {test,test_arity,{f,86},[{x,2},15]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},2,{x,1}}.
    {test,is_eq_exact,{f,86},[{x,0},{atom,win}]}.
    {move,{x,1},{x,0}}.
    {move,{atom,raise},{x,1}}.
    {move,{y,0},{y,8}}.
    {trim,8,1}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,45}.
    {test,is_eq_exact,{f,98},[{x,0},{atom,false}]}.
    {test,is_atom,{f,88},[{y,6}]}.
    {select_val,{y,6},
                {f,88},
                {list,[{atom,many},{f,46},{atom,single},{f,50}]}}.
  {label,46}.
    {move,{y,2},{x,1}}.
    {move,{y,8},{x,0}}.
    {init,{y,1}}.
    {init,{y,6}}.
    {init,{y,8}}.
    {call,2,{appmon,draw_win,2}}.
    {move,{x,0},{y,8}}.
    {make_fun2,{appmon,'-handle_info/2-fun-3-',2},3,109410439,1}.
    {move,{y,3},{x,1}}.
    {call_ext,2,{extfunc,lists,foreach,2}}.
    {move,{atom,many},{x,1}}.
    {move,{y,8},{x,0}}.
    {call,2,{appmon,display_setopt,2}}.
    {move,{y,5},{x,1}}.
    {init,{y,5}}.
    {move,{y,8},{x,0}}.
    {call,2,{appmon,display_setopt,2}}.
    {move,{y,4},{x,1}}.
    {init,{y,4}}.
    {move,{y,8},{x,0}}.
    {call,2,{appmon,display_setopt,2}}.
    {move,{y,3},{x,1}}.
    {init,{y,3}}.
    {move,{y,2},{x,0}}.
    {call,2,{appmon,get_mnode,2}}.
    {test,is_tuple,{f,87},[{x,0}]}.
    {test,test_arity,{f,87},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {get_tuple_element,{x,0},4,{x,3}}.
    {test,is_eq_exact,{f,87},[{x,1},{atom,mnode}]}.
    {test,is_atom,{f,85},[{x,2}]}.
    {select_val,{x,2},
                {f,85},
                {list,[{atom,alive},{f,47},{atom,dead},{f,48}]}}.
  {label,47}.
    {move,{y,2},{x,1}}.
    {move,{y,8},{x,0}}.
    {move,{x,3},{y,6}}.
    {init,{y,2}}.
    {call,2,{appmon,display_nodeup,2}}.
    {move,{y,6},{x,1}}.
    {move,{y,8},{x,0}}.
    {init,{y,6}}.
    {init,{y,8}}.
    {call,2,{appmon,draw_apps,2}}.
    {jump,{f,49}}.
  {label,48}.
    {init,{y,2}}.
    {move,{y,8},{x,0}}.
    {call,1,{appmon,display_nodedown,1}}.
    {move,{y,8},{x,0}}.
  {label,49}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,7},{x,2}}.
    {move,{y,0},{x,1}}.
    {trim,9,0}.
    {move,{integer,3},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,50}.
    {move,{y,7},{x,1}}.
    {move,{y,1},{x,0}}.
    {init,{y,1}}.
    {init,{y,4}}.
    {init,{y,5}}.
    {init,{y,6}}.
    {init,{y,8}}.
    {call,2,{appmon,get_win2,2}}.
    {test,is_tuple,{f,93},[{x,0}]}.
    {test,test_arity,{f,93},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,93},[{x,1},{atom,ok}]}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,8}}.
    {call,1,{appmon,draw_clear,1}}.
    {move,{y,2},{x,1}}.
    {move,{y,8},{x,0}}.
    {call,2,{appmon,draw_nodename,2}}.
    {move,{x,0},{y,6}}.
    {move,{y,3},{x,1}}.
    {init,{y,3}}.
    {move,{y,2},{x,0}}.
    {call,2,{appmon,get_mnode,2}}.
    {test,is_tuple,{f,87},[{x,0}]}.
    {test,test_arity,{f,87},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {get_tuple_element,{x,0},4,{x,3}}.
    {test,is_eq_exact,{f,87},[{x,1},{atom,mnode}]}.
    {test,is_atom,{f,85},[{x,2}]}.
    {select_val,{x,2},
                {f,85},
                {list,[{atom,alive},{f,51},{atom,dead},{f,52}]}}.
  {label,51}.
    {move,{y,2},{x,1}}.
    {move,{y,6},{x,0}}.
    {move,{x,3},{y,5}}.
    {init,{y,2}}.
    {call,2,{appmon,display_nodeup,2}}.
    {move,{y,5},{x,1}}.
    {move,{y,6},{x,0}}.
    {init,{y,5}}.
    {init,{y,6}}.
    {call,2,{appmon,draw_apps,2}}.
    {jump,{f,53}}.
  {label,52}.
    {init,{y,2}}.
    {move,{y,6},{x,0}}.
    {call,1,{appmon,display_nodedown,1}}.
    {move,{y,6},{x,0}}.
  {label,53}.
    {test,is_tuple,{f,86},[{y,8}]}.
    {test,test_arity,{f,86},[{y,8},15]}.
    {get_tuple_element,{y,8},0,{x,1}}.
    {get_tuple_element,{y,8},1,{x,2}}.
    {test,is_eq_exact,{f,86},[{x,1},{atom,win}]}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{y,7},{x,2}}.
    {move,{y,0},{y,8}}.
    {trim,8,1}.
    {call,3,{appmon,replace_win,3}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {trim,1,0}.
    {move,{integer,3},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,54}.
    {move,{x,3},{x,0}}.
    {move,{x,1},{y,6}}.
    {move,{x,4},{y,7}}.
    {move,{x,0},{y,8}}.
    {make_fun2,{appmon,'-handle_info/2-fun-1-',2},4,58115319,1}.
    {test,is_tuple,{f,91},[{y,6}]}.
    {test,test_arity,{f,91},[{y,6},8]}.
    {get_tuple_element,{y,6},0,{x,1}}.
    {get_tuple_element,{y,6},2,{x,2}}.
    {get_tuple_element,{y,6},7,{x,3}}.
    {test,is_eq_exact,{f,91},[{x,1},{atom,state}]}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{y,5}}.
    {call_ext,2,{extfunc,lists,foreach,2}}.
    {move,{y,7},{x,0}}.
    {make_fun2,{appmon,'-handle_info/2-fun-2-',2},5,101555183,1}.
    {move,{y,5},{x,1}}.
    {init,{y,5}}.
    {init,{y,7}}.
    {call_ext,2,{extfunc,lists,foreach,2}}.
    {test,is_ne_exact,{f,55},[{y,8},{atom,time}]}.
    {test,is_eq_exact,{f,56},[{y,8},{atom,queue}]}.
  {label,55}.
    {move,{y,6},{x,1}}.
    {move,{y,8},{x,2}}.
    {trim,9,0}.
    {move,{integer,5},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,56}.
    {test,is_ne_exact,{f,57},[{y,8},{atom,prog}]}.
    {test,is_eq_exact,{f,89},[{y,8},{atom,linear}]}.
  {label,57}.
    {move,{y,6},{x,1}}.
    {move,{y,8},{x,2}}.
    {trim,9,0}.
    {move,{integer,6},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,58}.
    {test,is_atom,{f,64},[{x,5}]}.
    {select_val,{x,5},
                {f,64},
                {list,[{atom,listbox},
                       {f,59},
                       {atom,exit},
                       {f,60},
                       {atom,help},
                       {f,61}]}}.
  {label,59}.
    {test,is_tuple,{f,91},[{x,1}]}.
    {test,test_arity,{f,91},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},6,{x,2}}.
    {get_tuple_element,{x,1},7,{x,3}}.
    {test,is_eq_exact,{f,91},[{x,0},{atom,state}]}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,7}}.
    {move,{x,1},{y,8}}.
    {call,1,{appmon,parse_nodes,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,7},{x,0}}.
    {trim,8,1}.
    {call_ext,2,{extfunc,appmon_lb,open_win,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,60}.
    {test_heap,4,2}.
    {put_tuple,3,{x,0}}.
    {put,{atom,stop}}.
    {put,{atom,normal}}.
    {put,{x,1}}.
    {deallocate,9}.
    return.
  {label,61}.
    {move,{atom,appmon},{x,0}}.
    {move,{x,1},{y,8}}.
    {call_ext,1,{extfunc,code,lib_dir,1}}.
    {test_heap,2,1}.
    {put_list,{x,0},
              {literal,["doc","html","part_frame.html"]},
              {x,0}}.
    {call_ext,1,{extfunc,filename,join,1}}.
    {test,is_tuple,{f,91},[{y,8}]}.
    {test,test_arity,{f,91},[{y,8},8]}.
    {get_tuple_element,{y,8},0,{x,1}}.
    {get_tuple_element,{y,8},1,{x,2}}.
    {get_tuple_element,{y,8},2,{x,3}}.
    {test,is_eq_exact,{f,91},[{x,1},{atom,state}]}.
    {test,is_nonempty_list,{f,62},[{x,3}]}.
    {get_list,{x,3},{x,1},{x,4}}.
    {test,is_nil,{f,62},[{x,4}]}.
    {test,is_tuple,{f,90},[{x,1}]}.
    {test,test_arity,{f,90},[{x,1},15]}.
    {get_tuple_element,{x,1},0,{x,2}}.
    {get_tuple_element,{x,1},2,{x,3}}.
    {test,is_eq_exact,{f,90},[{x,2},{atom,win}]}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_ext,2,{extfunc,tool_utils,open_help,2}}.
    {jump,{f,63}}.
  {label,62}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {call_ext,2,{extfunc,tool_utils,open_help,2}}.
  {label,63}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{y,8}}.
    {deallocate,9}.
    return.
  {label,64}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{x,1}}.
    {deallocate,9}.
    return.
  {label,65}.
    {allocate_zero,2,4}.
    {test,is_tuple,{f,94},[{x,1}]}.
    {test,test_arity,{f,94},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},2,{x,2}}.
    {test,is_eq_exact,{f,94},[{x,0},{atom,state}]}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,1},{y,1}}.
    {call,2,{appmon,get_win2,2}}.
    {test,is_tuple,{f,93},[{x,0}]}.
    {test,test_arity,{f,93},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,93},[{x,1},{atom,ok}]}.
    {test,is_tuple,{f,92},[{x,2}]}.
    {test,test_arity,{f,92},[{x,2},15]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{x,1}}.
    {test,is_eq_exact,{f,92},[{x,0},{atom,win}]}.
    {move,{x,1},{x,0}}.
    {move,{y,1},{x,1}}.
    {init,{y,1}}.
    {call,2,{appmon,remove_win,2}}.
    {test,is_nil,{f,66},[{x,0}]}.
    {test_heap,4,0}.
    {put_tuple,3,{x,0}}.
    {put,{atom,stop}}.
    {put,{atom,normal}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,66}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {trim,2,0}.
    {move,{integer,3},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,67}.
    {allocate_zero,1,6}.
    {test,is_tuple,{f,95},[{x,5}]}.
    {test,test_arity,{f,95},[{x,5},3]}.
    {get_tuple_element,{x,5},0,{x,0}}.
    {get_tuple_element,{x,5},1,{x,2}}.
    {test,is_eq_exact,{f,95},[{x,0},{atom,canvasbutton}]}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{appmon,press,1}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,68}.
    {test,is_atom,{f,76},[{x,4}]}.
    {select_val,{x,4},
                {f,76},
                {list,[{atom,app_ctrl},{f,69},{atom,load},{f,72}]}}.
  {label,69}.
    {allocate_zero,7,7}.
    {test,is_tuple,{f,97},[{x,1}]}.
    {test,test_arity,{f,97},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},2,{x,2}}.
    {get_tuple_element,{x,1},6,{x,3}}.
    {get_tuple_element,{x,1},7,{x,4}}.
    {test,is_eq_exact,{f,97},[{x,0},{atom,state}]}.
    {move,{x,1},{y,1}}.
    {move,{x,4},{x,1}}.
    {move,{x,5},{x,0}}.
    {move,{x,1},{y,2}}.
    {move,{x,3},{y,3}}.
    {move,{x,2},{y,4}}.
    {move,{x,6},{y,5}}.
    {move,{x,0},{y,6}}.
    {call,2,{appmon,get_mnode,2}}.
    {test,is_tuple,{f,96},[{x,0}]}.
    {test,test_arity,{f,96},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,96},[{x,1},{atom,mnode}]}.
    {move,{x,0},{x,1}}.
    {move,{y,5},{x,2}}.
    {move,{integer,5},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,2},{x,2}}.
    {init,{y,2}}.
    {move,{y,6},{x,0}}.
    {call,3,{appmon,replace_mnode,3}}.
    {move,{x,0},{y,2}}.
    {move,{y,4},{x,1}}.
    {move,{y,6},{x,0}}.
    {call,2,{appmon,get_win,2}}.
    {test,is_tuple,{f,70},[{x,0}]}.
    {test,test_arity,{f,98},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,98},[{x,1},{atom,ok}]}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,1,{appmon,draw_clear,1}}.
    {move,{y,5},{x,1}}.
    {move,{y,0},{x,0}}.
    {init,{y,0}}.
    {call,2,{appmon,draw_apps,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,4},{x,2}}.
    {init,{y,4}}.
    {move,{y,6},{x,0}}.
    {call,3,{appmon,replace_win,3}}.
    {jump,{f,71}}.
  {label,70}.
    {test,is_eq_exact,{f,98},[{x,0},{atom,false}]}.
    {move,{y,4},{x,0}}.
  {label,71}.
    {move,{x,0},{x,3}}.
    {move,{y,5},{x,1}}.
    {move,{y,6},{x,2}}.
    {move,{y,3},{x,0}}.
    {move,{x,3},{y,6}}.
    {init,{y,3}}.
    {init,{y,4}}.
    {init,{y,5}}.
    {call_ext,3,{extfunc,appmon_lb,add_apps,3}}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,2}}.
    {trim,6,1}.
    {move,{integer,8},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{y,0},{x,0},2}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,72}.
    {allocate_zero,5,7}.
    {test,is_tuple,{f,100},[{x,1}]}.
    {test,test_arity,{f,100},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},2,{x,2}}.
    {get_tuple_element,{x,1},7,{x,3}}.
    {test,is_eq_exact,{f,100},[{x,0},{atom,state}]}.
    {move,{x,1},{y,0}}.
    {move,{x,3},{x,1}}.
    {move,{x,5},{x,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,6},{y,3}}.
    {move,{x,0},{y,4}}.
    {call,2,{appmon,get_mnode,2}}.
    {test,is_tuple,{f,99},[{x,0}]}.
    {test,test_arity,{f,99},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,99},[{x,1},{atom,mnode}]}.
    {move,{x,0},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{integer,6},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {init,{y,1}}.
    {move,{y,4},{x,0}}.
    {call,3,{appmon,replace_mnode,3}}.
    {move,{x,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,4},{x,0}}.
    {move,{x,2},{y,4}}.
    {init,{y,2}}.
    {call,2,{appmon,get_win,2}}.
    {test,is_tuple,{f,73},[{x,0}]}.
    {test,test_arity,{f,98},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,98},[{x,1},{atom,ok}]}.
    {move,{y,3},{x,1}}.
    {init,{y,3}}.
    {move,{x,2},{x,0}}.
    {call,2,{appmon,display_load,2}}.
    {jump,{f,74}}.
  {label,73}.
    {test,is_eq_exact,{f,98},[{x,0},{atom,false}]}.
  {label,74}.
    {move,{y,0},{x,1}}.
    {move,{y,4},{x,2}}.
    {trim,5,0}.
    {move,{integer,8},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,noreply}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,75}.
    {test,is_eq_exact,{f,76},[{x,0},{atom,stop}]}.
    {test_heap,4,2}.
    {put_tuple,3,{x,0}}.
    {put,{atom,stop}}.
    {put,{atom,normal}}.
    {put,{x,1}}.
    return.
  {label,76}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,{atom,noreply}}.
    {put,{x,1}}.
    return.
  {label,77}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},6}.
  {label,78}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},6}.
  {label,79}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.
  {label,80}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},4}.
  {label,81}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},4}.
  {label,82}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,83}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,84}.
    {move,{literal,{badrecord,canvasbutton}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},6}.
  {label,85}.
    {case_end,{x,2}}.
  {label,86}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},9}.
  {label,87}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},9}.
  {label,88}.
    {case_end,{y,6}}.
  {label,89}.
    if_end.
  {label,90}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,91}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},9}.
  {label,92}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},2}.
  {label,93}.
    {badmatch,{x,0}}.
  {label,94}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},2}.
  {label,95}.
    {badmatch,{x,5}}.
  {label,96}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},7}.
  {label,97}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},7}.
  {label,98}.
    {case_end,{x,0}}.
  {label,99}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},5}.
  {label,100}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},5}.

{function,terminate,2,102}.
  {label,101}.
    {func_info,{atom,appmon},{atom,terminate},2}.
  {label,102}.
    {test,is_tuple,{f,103},[{x,1}]}.
    {test,test_arity,{f,103},[{x,1},8]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},6,{x,2}}.
    {get_tuple_element,{x,1},7,{x,3}}.
    {test,is_eq_exact,{f,103},[{x,0},{atom,state}]}.
    {allocate,1,4}.
    {move,{literal,{kill}},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {call,2,{appmon,bcast,2}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {call_ext,1,{extfunc,appmon_lb,stop,1}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,103}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,code_change,3,105}.
  {label,104}.
    {func_info,{atom,appmon},{atom,code_change},3}.
  {label,105}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,1}}.
    return.

{function,mk_mnodes,2,107}.
  {label,106}.
    {func_info,{atom,appmon},{atom,mk_mnodes},2}.
  {label,107}.
    {test,is_nonempty_list,{f,108},[{x,0}]}.
    {allocate,2,2}.
    {get_list,{x,0},{x,0},{y,1}}.
    {move,{x,1},{y,0}}.
    {call,2,{appmon,mk_mnode,2}}.
    {move,{x,0},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,2},{y,1}}.
    {trim,1,1}.
    {call,2,{appmon,mk_mnodes,2}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,108}.
    {test,is_nil,{f,106},[{x,0}]}.
    return.

{function,mk_mnode,2,110}.
  {label,109}.
    {func_info,{atom,appmon},{atom,mk_mnode},2}.
  {label,110}.
    {allocate,2,2}.
    {bif,self,nofail,[],{x,2}}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{x,1}}.
    {move,nil,{x,2}}.
    {move,{x,0},{y,1}}.
    {call_ext,3,{extfunc,appmon_info,start_link,3}}.
    {test,is_tuple,{f,111},[{x,0}]}.
    {test,test_arity,{f,111},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,111},[{x,1},{atom,ok}]}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,2},{y,0}}.
    {call_ext,2,{extfunc,appmon_lb,add_node,2}}.
    {move,{atom,true},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{literal,[{timeout,1000}]},{x,3}}.
    {move,{y,0},{x,0}}.
    {call_ext,4,{extfunc,appmon_info,load,4}}.
    {move,{atom,true},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,3}}.
    {move,{y,0},{x,0}}.
    {call_ext,4,{extfunc,appmon_info,app_ctrl,4}}.
    {test_heap,7,0}.
    {put_tuple,6,{x,0}}.
    {put,{atom,mnode}}.
    {put,{y,1}}.
    {put,{atom,alive}}.
    {put,{y,0}}.
    {put,{atom,undefined}}.
    {put,{atom,undefined}}.
    {deallocate,2}.
    return.
  {label,111}.
    {badmatch,{x,0}}.

{function,get_mnode,2,113}.
  {label,112}.
    {func_info,{atom,appmon},{atom,get_mnode},2}.
  {label,113}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{integer,2},{x,1}}.
    {call_ext,3,{extfunc,lists,keysearch,3}}.
    {test,is_tuple,{f,114},[{x,0}]}.
    {test,test_arity,{f,115},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,115},[{x,1},{atom,value}]}.
    {move,{x,2},{x,0}}.
    {deallocate,0}.
    return.
  {label,114}.
    {test,is_eq_exact,{f,115},[{x,0},{atom,false}]}.
    {deallocate,0}.
    return.
  {label,115}.
    {case_end,{x,0}}.

{function,replace_mnode,3,117}.
  {label,116}.
    {func_info,{atom,appmon},{atom,replace_mnode},3}.
  {label,117}.
    {test,is_nonempty_list,{f,119},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_tuple,{f,118},[{x,3}]}.
    {test,test_arity,{f,118},[{x,3},6]}.
    {get_tuple_element,{x,3},0,{x,5}}.
    {get_tuple_element,{x,3},1,{x,6}}.
    {test,is_eq_exact,{f,118},[{x,5},{atom,mnode}]}.
    {test,is_eq_exact,{f,118},[{x,6},{x,0}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,4},{x,0}}.
    return.
  {label,118}.
    {allocate,1,5}.
    {move,{x,4},{x,2}}.
    {move,{x,3},{y,0}}.
    {call,3,{appmon,replace_mnode,3}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,119}.
    {test,is_nil,{f,116},[{x,2}]}.
    {test_heap,2,2}.
    {put_list,{x,1},nil,{x,0}}.
    return.

{function,get_win,2,121}.
  {label,120}.
    {func_info,{atom,appmon},{atom,get_win},2}.
  {label,121}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{integer,2},{x,1}}.
    {call_ext,3,{extfunc,lists,keysearch,3}}.
    {test,is_tuple,{f,122},[{x,0}]}.
    {test,test_arity,{f,123},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,123},[{x,1},{atom,value}]}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,2}}.
    {deallocate,0}.
    return.
  {label,122}.
    {test,is_eq_exact,{f,123},[{x,0},{atom,false}]}.
    {deallocate,0}.
    return.
  {label,123}.
    {case_end,{x,0}}.

{function,get_win2,2,125}.
  {label,124}.
    {func_info,{atom,appmon},{atom,get_win2},2}.
  {label,125}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{integer,3},{x,1}}.
    {call_ext,3,{extfunc,lists,keysearch,3}}.
    {test,is_tuple,{f,126},[{x,0}]}.
    {test,test_arity,{f,127},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,127},[{x,1},{atom,value}]}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,2}}.
    {deallocate,0}.
    return.
  {label,126}.
    {test,is_eq_exact,{f,127},[{x,0},{atom,false}]}.
    {deallocate,0}.
    return.
  {label,127}.
    {case_end,{x,0}}.

{function,replace_win,3,129}.
  {label,128}.
    {func_info,{atom,appmon},{atom,replace_win},3}.
  {label,129}.
    {move,{x,1},{x,3}}.
    {move,{integer,2},{x,1}}.
    {call_ext_only,4,{extfunc,lists,keyreplace,4}}.

{function,remove_win,2,131}.
  {label,130}.
    {func_info,{atom,appmon},{atom,remove_win},2}.
  {label,131}.
    {move,{x,1},{x,2}}.
    {move,{integer,2},{x,1}}.
    {call_ext_only,3,{extfunc,lists,keydelete,3}}.

{function,draw_win,2,133}.
  {label,132}.
    {func_info,{atom,appmon},{atom,draw_win},2}.
  {label,133}.
    {allocate_zero,15,2}.
    {move,{x,0},{y,13}}.
    {move,{x,1},{x,0}}.
    {move,{x,0},{y,14}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"APPMON: Overview on "},{x,0}}.
    {move,{x,1},{y,12}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,5,1}.
    {put_tuple,2,{x,3}}.
    {put,{atom,title}}.
    {put,{x,0}}.
    {put_list,{x,3},
              {literal,[{width,520},{height,170},{configure,true}]},
              {x,2}}.
    {move,{y,13},{x,1}}.
    {init,{y,13}}.
    {move,{atom,window},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,{literal,[{x,0},{y,25},{width,520},{height,145}]},
          {x,2}}.
    {move,{atom,canvas},{x,0}}.
    {move,{x,1},{y,13}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,{literal,[{coords,[{0,25},{520,25}]}]},{x,2}}.
    {move,{atom,line},{x,0}}.
    {move,{x,1},{y,11}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{y,10}}.
    {move,{y,11},{x,1}}.
    {move,{literal,[{coords,[{0,135},{520,135}]}]},{x,2}}.
    {move,{atom,line},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{y,9}}.
    {move,{y,13},{x,1}}.
    {move,{literal,[{height,25}]},{x,2}}.
    {move,{atom,menubar},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,{literal,[{label,{text,"File"}}]},{x,2}}.
    {move,{atom,menubutton},{x,0}}.
    {move,{x,1},{y,8}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{atom,menu},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,{literal,[{label,{text,"Show List Box..."}},
                    {data,listbox}]},
          {x,2}}.
    {move,{atom,menuitem},{x,0}}.
    {move,{x,1},{y,7}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,10,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,close}}.
    {put,{y,13}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,data}}.
    {put,{x,0}}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{literal,{label,{text,"Close"}}},{x,0},{x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{y,7},{x,1}}.
    {move,{literal,[{itemtype,separator}]},{x,2}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{y,7},{x,1}}.
    {move,{literal,[{label,{text,"Exit"}},{data,exit}]},{x,2}}.
    {init,{y,7}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{y,8},{x,1}}.
    {move,{literal,[{label,{text,"Actions"}}]},{x,2}}.
    {move,{atom,menubutton},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{atom,menu},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,11,1}.
    {move,{x,0},{y,7}}.
    {put_tuple,3,{x,0}}.
    {put,{atom,action}}.
    {put,{atom,reboot}}.
    {put,{y,13}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,data}}.
    {put,{x,0}}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{literal,{label,{text,"Reboot"}}},{x,0},{x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,11,0}.
    {put_tuple,3,{x,0}}.
    {put,{atom,action}}.
    {put,{atom,restart}}.
    {put,{y,13}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,data}}.
    {put,{x,0}}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{literal,{label,{text,"Restart"}}},{x,0},{x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,11,0}.
    {put_tuple,3,{x,0}}.
    {put,{atom,action}}.
    {put,{atom,stop}}.
    {put,{y,13}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,data}}.
    {put,{x,0}}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{literal,{label,{text,"Stop"}}},{x,0},{x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,11,0}.
    {put_tuple,3,{x,0}}.
    {put,{atom,action}}.
    {put,{atom,ping}}.
    {put,{y,13}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,data}}.
    {put,{x,0}}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{literal,{label,{text,"Ping"}}},{x,0},{x,2}}.
    {move,{y,7},{x,1}}.
    {init,{y,7}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{y,8},{x,1}}.
    {move,{literal,[{label,{text,"Options"}}]},{x,2}}.
    {move,{atom,menubutton},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{atom,menu},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{y,7}}.
    {call_ext,0,{extfunc,erlang,now,0}}.
    {test_heap,9,1}.
    {move,{x,0},{y,6}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,group}}.
    {put,{y,6}}.
    {put_list,{x,0},
              {literal,[{data,{window_mode,single}}]},
              {x,0}}.
    {put_list,{literal,{itemtype,radio}},{x,0},{x,0}}.
    {put_list,{literal,{label,{text,"One window"}}},{x,0},{x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,9,1}.
    {put_tuple,2,{x,3}}.
    {put,{atom,group}}.
    {put,{y,6}}.
    {move,{x,0},{y,6}}.
    {put_list,{x,3},{literal,[{data,{window_mode,many}}]},{x,0}}.
    {put_list,{literal,{itemtype,radio}},{x,0},{x,0}}.
    {put_list,{literal,{label,{text,"Many windows"}}},
              {x,0},
              {x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{y,5}}.
    {move,{y,7},{x,1}}.
    {move,{literal,[{itemtype,separator}]},{x,2}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {call_ext,0,{extfunc,erlang,now,0}}.
    {test_heap,9,1}.
    {move,{x,0},{y,4}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,group}}.
    {put,{y,4}}.
    {put_list,{x,0},
              {literal,[{data,{option,time,[{load_method,time}]}}]},
              {x,0}}.
    {put_list,{literal,{itemtype,radio}},{x,0},{x,0}}.
    {put_list,{literal,{label,{text,"Load: time"}}},{x,0},{x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,9,1}.
    {put_tuple,2,{x,3}}.
    {put,{atom,group}}.
    {put,{y,4}}.
    {move,{x,0},{y,4}}.
    {put_list,{x,3},
              {literal,[{data,{option,queue,[{load_method,queue}]}}]},
              {x,0}}.
    {put_list,{literal,{itemtype,radio}},{x,0},{x,0}}.
    {put_list,{literal,{label,{text,"Load: queue"}}},
              {x,0},
              {x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{y,3}}.
    {call_ext,0,{extfunc,erlang,now,0}}.
    {test_heap,9,1}.
    {move,{x,0},{y,2}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,group}}.
    {put,{y,2}}.
    {put_list,{x,0},
              {literal,[{data,{option,prog,[{load_scale,prog}]}}]},
              {x,0}}.
    {put_list,{literal,{itemtype,radio}},{x,0},{x,0}}.
    {put_list,{literal,{label,{text,"Load: progressive"}}},
              {x,0},
              {x,2}}.
    {move,{y,7},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,9,1}.
    {put_tuple,2,{x,3}}.
    {put,{atom,group}}.
    {put,{y,2}}.
    {move,{x,0},{y,2}}.
    {put_list,{x,3},
              {literal,[{data,{option,linear,[{load_scale,linear}]}}]},
              {x,0}}.
    {put_list,{literal,{itemtype,radio}},{x,0},{x,0}}.
    {put_list,{literal,{label,{text,"Load: linear"}}},
              {x,0},
              {x,2}}.
    {move,{y,7},{x,1}}.
    {init,{y,7}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{y,7}}.
    {move,{y,8},{x,1}}.
    {move,{literal,[{label,{text,"Nodes"}}]},{x,2}}.
    {move,{atom,menubutton},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{atom,menu},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,3}}.
    {move,{y,8},{x,1}}.
    {move,{literal,[{label,{text,"Help"}},{side,right}]},{x,2}}.
    {move,{atom,menubutton},{x,0}}.
    {move,{x,3},{y,8}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{atom,menu},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{x,0},{x,1}}.
    {move,{literal,[{label,{text,"Help"}},{data,help}]},{x,2}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{integer,35},{x,2}}.
    {move,{integer,5},{x,3}}.
    {move,{y,11},{x,1}}.
    {move,nil,{x,4}}.
    {move,{integer,16},{x,0}}.
    {call,5,{appmon,draw_leds,5}}.
    {move,{integer,0},{x,2}}.
    {move,{integer,16},{x,1}}.
    {move,{x,0},{y,1}}.
    {call,3,{appmon,leds_down,3}}.
    {move,{y,11},{x,1}}.
    {move,{literal,[{coords,[{5,115}]},
                    {anchor,nw},
                    {font,{screen,8}},
                    {text,"Load"}]},
          {x,2}}.
    {move,{atom,text},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{y,11},{x,1}}.
    {move,{literal,[{coords,[{25,35}]},
                    {anchor,nw},
                    {font,{screen,8}},
                    {text,"Hi"}]},
          {x,2}}.
    {move,{atom,text},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {move,{y,11},{x,1}}.
    {move,{literal,[{coords,[{25,115}]},
                    {anchor,w},
                    {font,{screen,8}},
                    {text,"Lo"}]},
          {x,2}}.
    {move,{atom,text},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {gc_bif,length,{f,0},0,[{y,12}],{x,0}}.
    {gc_bif,'*',{f,0},1,[{integer,8},{x,0}],{x,0}}.
    {gc_bif,'+',{f,0},1,[{x,0},{integer,10}],{x,0}}.
    {gc_bif,'+',{f,0},1,[{integer,60},{x,0}],{x,1}}.
    {test_heap,12,2}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{integer,55}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{literal,{60,35}},{x,0},{x,0}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,0}}.
    {put_list,{x,3},{literal,[{fill,black}]},{x,2}}.
    {move,{y,11},{x,1}}.
    {move,{atom,rectangle},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,{alloc,[{words,0},{floats,1}]},1}.
    {fconv,{y,0},{fr,0}}.
    {fconv,{integer,2},{fr,1}}.
    fclearerror.
    {arithfbif,fdiv,{f,0},[{fr,0},{fr,1}],{fr,2}}.
    {fcheckerror,{f,0}}.
    {fmove,{fr,2},{x,1}}.
    {gc_bif,round,{f,0},2,[{x,1}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{integer,60},{x,1}],{x,1}}.
    {test_heap,17,2}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{integer,45}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,0}}.
    {put_list,{x,3},{literal,[{anchor,c}]},{x,0}}.
    {put_list,{literal,{fg,{250,235,215}}},{x,0},{x,0}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,text}}.
    {put,{y,12}}.
    {put_list,{x,3},{x,0},{x,2}}.
    {move,{y,11},{x,1}}.
    {init,{y,12}}.
    {move,{atom,text},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{y,12}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{literal,{map,true}},{x,1}}.
    {trim,1,14}.
    {move,{y,12},{x,0}}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {test_heap,24,0}.
    {put_tuple,7,{x,1}}.
    {put,{atom,options}}.
    {put,{y,5}}.
    {put,{y,4}}.
    {put,{y,3}}.
    {put,{y,2}}.
    {put,{y,1}}.
    {put,{y,6}}.
    {put_tuple,15,{x,0}}.
    {put,{atom,win}}.
    {put,{y,13}}.
    {put,{y,12}}.
    {put,{integer,520}}.
    {put,{integer,145}}.
    {put,{x,1}}.
    {put,{y,10}}.
    {put,{integer,520}}.
    {put,{integer,145}}.
    {put,{y,9}}.
    {put,{y,8}}.
    {put,{y,0}}.
    {put,{y,11}}.
    {put,nil}.
    {put,{y,7}}.
    {deallocate,14}.
    return.

{function,draw_leds,5,135}.
  {label,134}.
    {func_info,{atom,appmon},{atom,draw_leds},5}.
  {label,135}.
    {test,is_lt,{f,136},[{integer,0},{x,0}]}.
    {allocate_zero,5,5}.
    {gc_bif,'+',{f,0},5,[{x,2},{x,3}],{x,5}}.
    {test_heap,15,6}.
    {move,{x,4},{y,4}}.
    {move,{x,3},{y,3}}.
    {move,{x,2},{y,2}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,0}}.
    {put,{integer,25}}.
    {put,{x,5}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_tuple,2,{x,5}}.
    {put,{integer,5}}.
    {put,{y,2}}.
    {put_list,{x,5},{x,0},{x,0}}.
    {put_tuple,2,{x,5}}.
    {put,{atom,coords}}.
    {put,{x,0}}.
    {put_list,{x,5},nil,{x,2}}.
    {move,{atom,rectangle},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {gc_bif,'-',{f,0},1,[{y,0},{integer,1}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{y,2},{y,3}],{x,2}}.
    {test_heap,2,3}.
    {put_list,{x,0},{y,4},{x,4}}.
    {move,{y,3},{x,3}}.
    {move,{x,1},{x,0}}.
    {move,{y,1},{x,1}}.
    {call_last,5,{appmon,draw_leds,5},5}.
  {label,136}.
    {test,is_eq_exact,{f,134},[{x,0},{integer,0}]}.
    {move,{x,4},{x,0}}.
    return.

{function,draw_nodename,2,138}.
  {label,137}.
    {func_info,{atom,appmon},{atom,draw_nodename},2}.
  {label,138}.
    {allocate,3,2}.
    {init,{y,0}}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,0},{y,1}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {test,is_tuple,{f,139},[{y,2}]}.
    {test,test_arity,{f,139},[{y,2},15]}.
    {get_tuple_element,{y,2},0,{x,1}}.
    {get_tuple_element,{y,2},2,{x,2}}.
    {test,is_eq_exact,{f,139},[{x,1},{atom,win}]}.
    {move,{x,0},{x,1}}.
    {move,{literal,"APPMON: Overview on "},{x,0}}.
    {move,{x,2},{y,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,title}}.
    {put,{x,0}}.
    {move,{y,0},{x,0}}.
    {trim,1,2}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{integer,2},{x,0}}.
    {call_ext_last,3,{extfunc,erlang,setelement,3},2}.
  {label,139}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},3}.

{function,draw_resize,3,141}.
  {label,140}.
    {func_info,{atom,appmon},{atom,draw_resize},3}.
  {label,141}.
    {allocate_zero,5,3}.
    {gc_bif,'-',{f,0},3,[{x,2},{integer,25}],{x,2}}.
    {test,is_tuple,{f,142},[{x,0}]}.
    {test,test_arity,{f,142},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},6,{x,4}}.
    {get_tuple_element,{x,0},9,{x,5}}.
    {get_tuple_element,{x,0},10,{x,6}}.
    {test,is_eq_exact,{f,142},[{x,3},{atom,win}]}.
    {test_heap,10,7}.
    {move,{x,1},{y,4}}.
    {move,{x,0},{y,3}}.
    {move,{x,2},{y,2}}.
    {move,{x,6},{y,1}}.
    {move,{x,5},{y,0}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,height}}.
    {put,{x,2}}.
    {put_list,{x,3},nil,{x,3}}.
    {put_tuple,2,{x,7}}.
    {put,{atom,width}}.
    {put,{y,4}}.
    {put_list,{x,7},{x,3},{x,1}}.
    {move,{x,4},{x,0}}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {test_heap,12,0}.
    {put_tuple,2,{x,2}}.
    {put,{y,4}}.
    {put,{integer,25}}.
    {put_list,{x,2},nil,{x,2}}.
    {put_list,{literal,{0,25}},{x,2},{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,2}}.
    {put_list,{x,3},nil,{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,4}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {test_heap,12,0}.
    {put_tuple,2,{x,2}}.
    {put,{y,3}}.
    {put,{integer,135}}.
    {put_list,{x,2},nil,{x,2}}.
    {put_list,{literal,{0,135}},{x,2},{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,2}}.
    {put_list,{x,3},nil,{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,3}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {trim,2,1}.
    {move,{integer,5},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{y,0},{x,0},3}.
    {deallocate,1}.
    return.
  {label,142}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},5}.

{function,draw_clear,1,144}.
  {label,143}.
    {func_info,{atom,appmon},{atom,draw_clear},1}.
  {label,144}.
    {test,is_tuple,{f,145},[{x,0}]}.
    {test,test_arity,{f,145},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},6,{x,2}}.
    {get_tuple_element,{x,0},13,{x,3}}.
    {test,is_eq_exact,{f,145},[{x,1},{atom,win}]}.
    {allocate,2,4}.
    {move,{x,0},{y,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {call,1,{appmon,draw_clear2,1}}.
    {move,{literal,[{hscroll,false}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {move,{y,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{integer,14},{x,0}}.
    {call_ext_last,3,{extfunc,erlang,setelement,3},1}.
  {label,145}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,draw_clear2,1,147}.
  {label,146}.
    {func_info,{atom,appmon},{atom,draw_clear2},1}.
  {label,147}.
    {test,is_nonempty_list,{f,149},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,148},[{x,1}]}.
    {test,test_arity,{f,148},[{x,1},9]}.
    {get_tuple_element,{x,1},0,{x,1023}}.
    {test,is_eq_exact,{f,148},[{x,1023},{atom,canvasbutton}]}.
    {allocate_zero,4,3}.
    {test,is_tuple,{f,150},[{x,1}]}.
    {test,test_arity,{f,150},[{x,1},9]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {get_tuple_element,{x,1},2,{x,4}}.
    {get_tuple_element,{x,1},3,{x,5}}.
    {get_tuple_element,{x,1},4,{x,6}}.
    {test,is_eq_exact,{f,150},[{x,0},{atom,canvasbutton}]}.
    {move,{x,3},{x,0}}.
    {move,{x,4},{y,0}}.
    {move,{x,5},{y,1}}.
    {move,{x,6},{y,2}}.
    {move,{x,2},{y,3}}.
    {call_ext,1,{extfunc,gs,destroy,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,3}.
    {call_ext,1,{extfunc,gs,destroy,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,2}.
    {call_ext,1,{extfunc,gs,destroy,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {call_ext,1,{extfunc,gs,destroy,1}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{appmon,draw_clear2,1},1}.
  {label,148}.
    {allocate,1,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {call_ext,1,{extfunc,gs,destroy,1}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{appmon,draw_clear2,1},1}.
  {label,149}.
    {test,is_nil,{f,146},[{x,0}]}.
    {move,{atom,ignore},{x,0}}.
    return.
  {label,150}.
    {move,{literal,{badrecord,canvasbutton}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},4}.

{function,draw_apps,2,152}.
  {label,151}.
    {func_info,{atom,appmon},{atom,draw_apps},2}.
  {label,152}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,0}}.
    {call_ext,1,{extfunc,lists,reverse,1}}.
    {move,{atom,undefined},{x,3}}.
    {move,{integer,60},{x,2}}.
    {move,{integer,0},{x,4}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,5}}.
    {move,{y,0},{x,0}}.
    {call,6,{appmon,draw_apps,6}}.
    {test,is_tuple,{f,154},[{x,0}]}.
    {test,test_arity,{f,154},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tuple,{f,153},[{y,0}]}.
    {test,test_arity,{f,153},[{y,0},15]}.
    {get_tuple_element,{y,0},0,{x,0}}.
    {test,is_eq_exact,{f,153},[{x,0},{atom,win}]}.
    {move,{x,2},{x,3}}.
    {move,{x,1},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{integer,14},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{y,0},{x,0},7}.
    {move,{x,0},{y,0}}.
    {call,1,{appmon,display_scrollbar,1}}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,153}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},1}.
  {label,154}.
    {badmatch,{x,0}}.

{function,draw_apps,6,156}.
  {label,155}.
    {func_info,{atom,appmon},{atom,draw_apps},6}.
  {label,156}.
    {test,is_nonempty_list,{f,159},[{x,1}]}.
    {allocate_zero,10,6}.
    {get_list,{x,1},{x,6},{x,7}}.
    {test,is_tuple,{f,162},[{x,6}]}.
    {test,test_arity,{f,162},[{x,6},3]}.
    {get_tuple_element,{x,6},1,{x,1}}.
    {move,{x,0},{y,7}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{y,3}}.
    {move,{x,5},{y,4}}.
    {move,{x,4},{y,5}}.
    {move,{x,2},{y,6}}.
    {move,{x,7},{y,8}}.
    {move,{x,0},{y,9}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {gc_bif,length,{f,0},1,[{x,0}],{x,1}}.
    {gc_bif,'*',{f,0},2,[{integer,8},{x,1}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{x,1},{integer,10}],{x,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{x,0}}.
    {move,{integer,70},{x,1}}.
    {call,2,{appmon,max,2}}.
    {test_heap,{alloc,[{words,0},{floats,1}]},1}.
    {fconv,{x,0},{fr,0}}.
    {fconv,{integer,2},{fr,1}}.
    fclearerror.
    {arithfbif,fdiv,{f,0},[{fr,0},{fr,1}],{fr,2}}.
    {fcheckerror,{f,0}}.
    {fmove,{fr,2},{x,1}}.
    {gc_bif,trunc,{f,0},2,[{x,1}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{y,6},{x,1}],{x,1}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {test,is_eq_exact,{f,157},[{y,5},{integer,0}]}.
    {test,is_tuple,{f,160},[{y,7}]}.
    {test,test_arity,{f,160},[{y,7},15]}.
    {get_tuple_element,{y,7},0,{x,2}}.
    {get_tuple_element,{y,7},6,{x,3}}.
    {test,is_eq_exact,{f,160},[{x,2},{atom,win}]}.
    {test_heap,15,4}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{integer,105}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{y,0}}.
    {put,{integer,65}}.
    {put_list,{x,4},{x,0},{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,coords}}.
    {put,{x,0}}.
    {put_list,{x,4},nil,{x,2}}.
    {move,{x,3},{x,1}}.
    {init,{y,3}}.
    {move,{atom,line},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {jump,{f,158}}.
  {label,157}.
    {test,is_tuple,{f,160},[{y,7}]}.
    {test,test_arity,{f,160},[{y,7},15]}.
    {get_tuple_element,{y,7},0,{x,2}}.
    {get_tuple_element,{y,7},6,{x,3}}.
    {test,is_eq_exact,{f,160},[{x,2},{atom,win}]}.
    {test_heap,20,4}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{float,105.000}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{y,0}}.
    {put,{float,85.0000}}.
    {put_list,{x,4},{x,0},{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{y,3}}.
    {put,{float,85.0000}}.
    {put_list,{x,4},{x,0},{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,coords}}.
    {put,{x,0}}.
    {put_list,{x,4},nil,{x,2}}.
    {move,{x,3},{x,1}}.
    {init,{y,3}}.
    {move,{atom,line},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
  {label,158}.
    {test,is_tuple,{f,161},[{y,7}]}.
    {test,test_arity,{f,161},[{y,7},15]}.
    {get_tuple_element,{y,7},0,{x,1}}.
    {get_tuple_element,{y,7},1,{x,2}}.
    {get_tuple_element,{y,7},6,{x,3}}.
    {test,is_eq_exact,{f,161},[{x,1},{atom,win}]}.
    {test_heap,4,4}.
    {move,{x,0},{y,3}}.
    {put_tuple,3,{x,6}}.
    {put,{atom,application}}.
    {put,{y,9}}.
    {put,{x,2}}.
    {move,{y,6},{x,2}}.
    {move,{y,1},{x,4}}.
    {move,{y,2},{x,1}}.
    {move,{integer,20},{x,5}}.
    {move,{x,3},{x,0}}.
    {move,{integer,105},{x,3}}.
    {init,{y,2}}.
    {init,{y,9}}.
    {call,7,{appmon,canvasbutton,7}}.
    {gc_bif,'+',{f,0},1,[{y,6},{y,1}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{x,1},{integer,10}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{y,5},{integer,1}],{x,2}}.
    {test_heap,4,3}.
    {put_list,{y,3},{y,4},{x,6}}.
    {put_list,{x,0},{x,6},{x,5}}.
    {move,{y,0},{x,3}}.
    {move,{x,2},{x,4}}.
    {move,{x,1},{x,2}}.
    {move,{y,8},{x,1}}.
    {move,{y,7},{x,0}}.
    {call_last,6,{appmon,draw_apps,6},10}.
  {label,159}.
    {test,is_nil,{f,155},[{x,1}]}.
    {test_heap,3,6}.
    {put_tuple,2,{x,0}}.
    {put,{x,5}}.
    {put,{x,2}}.
    return.
  {label,160}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,161}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},10}.
  {label,162}.
    {badmatch,{x,6}}.

{function,display_addnode,2,164}.
  {label,163}.
    {func_info,{atom,appmon},{atom,display_addnode},2}.
  {label,164}.
    {test,is_nonempty_list,{f,165},[{x,0}]}.
    {allocate,2,2}.
    {get_list,{x,0},{x,0},{y,1}}.
    {move,{x,1},{y,0}}.
    {call,2,{appmon,display_addnode,2}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{appmon,display_addnode,2},2}.
  {label,165}.
    {test,is_nil,{f,166},[{x,0}]}.
    {move,{atom,ignore},{x,0}}.
    return.
  {label,166}.
    {allocate,2,2}.
    {move,{x,0},{y,1}}.
    {move,{x,1},{x,0}}.
    {move,{x,0},{y,0}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {test_heap,10,1}.
    {put_list,{integer,32},{x,0},{x,0}}.
    {put_list,{integer,119},{x,0},{x,0}}.
    {put_list,{integer,111},{x,0},{x,0}}.
    {put_list,{integer,104},{x,0},{x,0}}.
    {put_list,{integer,83},{x,0},{x,0}}.
    {test,is_tuple,{f,167},[{y,1}]}.
    {test,test_arity,{f,167},[{y,1},15]}.
    {get_tuple_element,{y,1},0,{x,1}}.
    {get_tuple_element,{y,1},2,{x,2}}.
    {get_tuple_element,{y,1},14,{x,3}}.
    {test,is_eq_exact,{f,167},[{x,1},{atom,win}]}.
    {test_heap,17,4}.
    {put_tuple,2,{x,4}}.
    {put,{atom,text}}.
    {put,{x,0}}.
    {put_tuple,3,{x,5}}.
    {put,{atom,node}}.
    {put,{y,0}}.
    {put,{x,2}}.
    {put_tuple,2,{x,6}}.
    {put,{atom,data}}.
    {put,{x,5}}.
    {put_list,{x,6},nil,{x,5}}.
    {put_tuple,2,{x,6}}.
    {put,{atom,label}}.
    {put,{x,4}}.
    {put_list,{x,6},{x,5},{x,2}}.
    {move,{x,3},{x,1}}.
    {move,{atom,menuitem},{x,0}}.
    {call_ext_last,3,{extfunc,gs,create,3},2}.
  {label,167}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},2}.

{function,display_nodeup,2,169}.
  {label,168}.
    {func_info,{atom,appmon},{atom,display_nodeup},2}.
  {label,169}.
    {test,is_tuple,{f,172},[{x,0}]}.
    {test,test_arity,{f,172},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},12,{x,3}}.
    {test,is_eq_exact,{f,172},[{x,2},{atom,win}]}.
    {allocate_zero,5,4}.
    {test,is_tuple,{f,171},[{x,3}]}.
    {test,test_arity,{f,171},[{x,3},2]}.
    {get_tuple_element,{x,3},0,{x,0}}.
    {get_tuple_element,{x,3},1,{y,3}}.
    {move,{x,1},{y,2}}.
    {move,{atom,coords},{x,1}}.
    {move,{x,0},{y,4}}.
    {call_ext,2,{extfunc,gs,read,2}}.
    {test,is_nonempty_list,{f,170},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,170},[{x,1}]}.
    {test,test_arity,{f,170},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {test,is_nonempty_list,{f,170},[{x,2}]}.
    {get_list,{x,2},{x,5},{x,6}}.
    {test,is_tuple,{f,170},[{x,5}]}.
    {test,test_arity,{f,170},[{x,5},2]}.
    {get_tuple_element,{x,5},1,{x,7}}.
    {test,is_nil,{f,170},[{x,6}]}.
    {move,{y,2},{x,0}}.
    {move,{x,7},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,4},{y,2}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {gc_bif,length,{f,0},1,[{x,0}],{x,1}}.
    {gc_bif,'*',{f,0},2,[{integer,8},{x,1}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{x,1},{integer,10}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{y,1},{x,1}],{x,2}}.
    {test_heap,15,3}.
    {put_tuple,2,{x,3}}.
    {put,{x,2}}.
    {put,{y,0}}.
    {move,{x,0},{y,0}}.
    {put_list,{x,3},nil,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{y,1}}.
    {put,{y,2}}.
    {put_list,{x,3},{x,2},{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,2}}.
    {put_list,{x,3},{literal,[{fill,black}]},{x,2}}.
    {move,{x,1},{x,3}}.
    {move,{x,2},{x,1}}.
    {move,{y,4},{x,0}}.
    {move,{x,3},{y,4}}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {test_heap,{alloc,[{words,0},{floats,1}]},0}.
    {fconv,{y,4},{fr,0}}.
    {fconv,{integer,2},{fr,1}}.
    fclearerror.
    {arithfbif,fdiv,{f,0},[{fr,0},{fr,1}],{fr,2}}.
    {fcheckerror,{f,0}}.
    {fmove,{fr,2},{x,0}}.
    {gc_bif,round,{f,0},1,[{x,0}],{x,0}}.
    {gc_bif,'+',{f,0},1,[{y,1},{x,0}],{x,0}}.
    {gc_bif,'+',{f,0},1,[{y,2},{integer,10}],{x,1}}.
    {test_heap,17,2}.
    {put_tuple,2,{x,2}}.
    {put,{x,0}}.
    {put,{x,1}}.
    {put_list,{x,2},nil,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,2}}.
    {put_list,{x,3},nil,{x,2}}.
    {put_list,{literal,{fg,{250,235,215}}},{x,2},{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,text}}.
    {put,{y,0}}.
    {put_list,{x,3},{x,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {call_ext_last,2,{extfunc,gs,config,2},5}.
  {label,170}.
    {badmatch,{x,0}}.
  {label,171}.
    {badmatch,{x,3}}.
  {label,172}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,display_nodedown,1,174}.
  {label,173}.
    {func_info,{atom,appmon},{atom,display_nodedown},1}.
  {label,174}.
    {test,is_tuple,{f,177},[{x,0}]}.
    {test,test_arity,{f,177},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},12,{x,2}}.
    {test,is_eq_exact,{f,177},[{x,1},{atom,win}]}.
    {allocate_zero,3,3}.
    {test,is_tuple,{f,176},[{x,2}]}.
    {test,test_arity,{f,176},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{y,1}}.
    {move,{atom,coords},{x,1}}.
    {move,{x,0},{y,2}}.
    {call_ext,2,{extfunc,gs,read,2}}.
    {test,is_nonempty_list,{f,175},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,175},[{x,1}]}.
    {test,test_arity,{f,175},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {test,is_nonempty_list,{f,175},[{x,2}]}.
    {get_list,{x,2},{x,5},{x,6}}.
    {test,is_tuple,{f,175},[{x,5}]}.
    {test,test_arity,{f,175},[{x,5},2]}.
    {get_tuple_element,{x,5},1,{x,7}}.
    {test,is_nil,{f,175},[{x,6}]}.
    {gc_bif,'+',{f,0},8,[{x,3},{integer,114}],{x,0}}.
    {test_heap,15,8}.
    {move,{x,4},{y,0}}.
    {put_tuple,2,{x,2}}.
    {put,{x,0}}.
    {put,{x,7}}.
    {put_list,{x,2},nil,{x,2}}.
    {put_tuple,2,{x,5}}.
    {put,{x,3}}.
    {put,{x,4}}.
    {put_list,{x,5},{x,2},{x,2}}.
    {put_tuple,2,{x,5}}.
    {put,{atom,coords}}.
    {put,{x,2}}.
    {put_list,{x,5},{literal,[{fill,gray}]},{x,1}}.
    {move,{y,2},{x,0}}.
    {move,{x,3},{y,2}}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {gc_bif,'+',{f,0},0,[{y,2},{integer,57}],{x,0}}.
    {gc_bif,'+',{f,0},1,[{y,0},{integer,10}],{x,1}}.
    {test_heap,14,2}.
    {put_tuple,2,{x,2}}.
    {put,{x,0}}.
    {put,{x,1}}.
    {put_list,{x,2},nil,{x,2}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,2}}.
    {put_list,{x,3},nil,{x,2}}.
    {put_list,{literal,{fg,black}},{x,2},{x,2}}.
    {put_list,{literal,{text,"No connection"}},{x,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_ext_last,2,{extfunc,gs,config,2},3}.
  {label,175}.
    {badmatch,{x,0}}.
  {label,176}.
    {badmatch,{x,2}}.
  {label,177}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,display_scrollbar,1,179}.
  {label,178}.
    {func_info,{atom,appmon},{atom,display_scrollbar},1}.
  {label,179}.
    {test,is_tuple,{f,183},[{x,0}]}.
    {test,test_arity,{f,183},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},3,{x,2}}.
    {get_tuple_element,{x,0},4,{x,3}}.
    {get_tuple_element,{x,0},6,{x,4}}.
    {get_tuple_element,{x,0},7,{x,5}}.
    {get_tuple_element,{x,0},8,{x,6}}.
    {test,is_eq_exact,{f,183},[{x,1},{atom,win}]}.
    {allocate,4,7}.
    {move,{x,3},{y,0}}.
    {move,{x,6},{y,1}}.
    {move,{x,5},{y,2}}.
    {move,{x,4},{y,3}}.
    {test,is_lt,{f,180},[{x,2},{x,5}]}.
    {test_heap,12,7}.
    {put_tuple,4,{x,2}}.
    {put,{integer,0}}.
    {put,{integer,0}}.
    {put,{x,5}}.
    {put,{x,6}}.
    {put_tuple,2,{x,7}}.
    {put,{atom,scrollregion}}.
    {put,{x,2}}.
    {put_list,{x,7},nil,{x,2}}.
    {put_list,{literal,{hscroll,bottom}},{x,2},{x,1}}.
    {move,{x,4},{x,0}}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {jump,{f,181}}.
  {label,180}.
    {move,{literal,[{hscroll,false}]},{x,1}}.
    {move,{x,4},{x,0}}.
    {call_ext,2,{extfunc,gs,config,2}}.
  {label,181}.
    {test,is_lt,{f,182},[{y,0},{y,1}]}.
    {test_heap,12,0}.
    {put_tuple,4,{x,2}}.
    {put,{integer,0}}.
    {put,{integer,0}}.
    {put,{y,2}}.
    {put,{y,1}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,scrollregion}}.
    {put,{x,2}}.
    {put_list,{x,3},nil,{x,2}}.
    {put_list,{literal,{vscroll,left}},{x,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {call_ext_last,2,{extfunc,gs,config,2},4}.
  {label,182}.
    {move,{literal,[{vscroll,false}]},{x,1}}.
    {move,{y,3},{x,0}}.
    {call_ext_last,2,{extfunc,gs,config,2},4}.
  {label,183}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,display_setopt,2,185}.
  {label,184}.
    {func_info,{atom,appmon},{atom,display_setopt},2}.
  {label,185}.
    {allocate,0,2}.
    {call,2,{appmon,radiobutton,2}}.
    {move,{literal,{select,true}},{x,1}}.
    {call_ext_last,2,{extfunc,gs,config,2},0}.

{function,radiobutton,2,187}.
  {label,186}.
    {func_info,{atom,appmon},{atom,radiobutton},2}.
  {label,187}.
    {test,is_atom,{f,186},[{x,1}]}.
    {select_val,{x,1},
                {f,186},
                {list,[{atom,many},
                       {f,188},
                       {atom,prog},
                       {f,189},
                       {atom,single},
                       {f,190},
                       {atom,time},
                       {f,191},
                       {atom,queue},
                       {f,192},
                       {atom,linear},
                       {f,193}]}}.
  {label,188}.
    {test,is_tuple,{f,195},[{x,0}]}.
    {test,test_arity,{f,195},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},5,{x,2}}.
    {test,is_eq_exact,{f,195},[{x,1},{atom,win}]}.
    {test,is_tuple,{f,194},[{x,2}]}.
    {test,test_arity,{f,194},[{x,2},7]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},2,{x,1}}.
    {test,is_eq_exact,{f,194},[{x,0},{atom,options}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,189}.
    {test,is_tuple,{f,195},[{x,0}]}.
    {test,test_arity,{f,195},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},5,{x,2}}.
    {test,is_eq_exact,{f,195},[{x,1},{atom,win}]}.
    {test,is_tuple,{f,194},[{x,2}]}.
    {test,test_arity,{f,194},[{x,2},7]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},5,{x,1}}.
    {test,is_eq_exact,{f,194},[{x,0},{atom,options}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,190}.
    {test,is_tuple,{f,195},[{x,0}]}.
    {test,test_arity,{f,195},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},5,{x,2}}.
    {test,is_eq_exact,{f,195},[{x,1},{atom,win}]}.
    {test,is_tuple,{f,194},[{x,2}]}.
    {test,test_arity,{f,194},[{x,2},7]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{x,1}}.
    {test,is_eq_exact,{f,194},[{x,0},{atom,options}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,191}.
    {test,is_tuple,{f,195},[{x,0}]}.
    {test,test_arity,{f,195},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},5,{x,2}}.
    {test,is_eq_exact,{f,195},[{x,1},{atom,win}]}.
    {test,is_tuple,{f,194},[{x,2}]}.
    {test,test_arity,{f,194},[{x,2},7]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},3,{x,1}}.
    {test,is_eq_exact,{f,194},[{x,0},{atom,options}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,192}.
    {test,is_tuple,{f,195},[{x,0}]}.
    {test,test_arity,{f,195},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},5,{x,2}}.
    {test,is_eq_exact,{f,195},[{x,1},{atom,win}]}.
    {test,is_tuple,{f,194},[{x,2}]}.
    {test,test_arity,{f,194},[{x,2},7]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},4,{x,1}}.
    {test,is_eq_exact,{f,194},[{x,0},{atom,options}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,193}.
    {test,is_tuple,{f,195},[{x,0}]}.
    {test,test_arity,{f,195},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},5,{x,2}}.
    {test,is_eq_exact,{f,195},[{x,1},{atom,win}]}.
    {test,is_tuple,{f,194},[{x,2}]}.
    {test,test_arity,{f,194},[{x,2},7]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},6,{x,1}}.
    {test,is_eq_exact,{f,194},[{x,0},{atom,options}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,194}.
    {move,{literal,{badrecord,options}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.
  {label,195}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,display_load,2,197}.
  {label,196}.
    {func_info,{atom,appmon},{atom,display_load},2}.
  {label,197}.
    {test,is_tuple,{f,196},[{x,1}]}.
    {test,test_arity,{f,196},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,2}}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {test,is_eq,{f,198},[{x,2},{x,3}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,198}.
    {test,is_lt,{f,199},[{x,3},{x,2}]}.
    {test,is_tuple,{f,200},[{x,0}]}.
    {test,test_arity,{f,200},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},11,{x,4}}.
    {test,is_eq_exact,{f,200},[{x,1},{atom,win}]}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,0}}.
    {call_only,3,{appmon,leds_down,3}}.
  {label,199}.
    {test,is_tuple,{f,200},[{x,0}]}.
    {test,test_arity,{f,200},[{x,0},15]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},11,{x,4}}.
    {test,is_eq_exact,{f,200},[{x,1},{atom,win}]}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,0}}.
    {call_only,3,{appmon,leds_up,3}}.
  {label,200}.
    {move,{literal,{badrecord,win}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,leds_down,3,202}.
  {label,201}.
    {func_info,{atom,appmon},{atom,leds_down},3}.
  {label,202}.
    {test,is_eq,{f,203},[{x,1},{x,2}]}.
    {move,{atom,done},{x,0}}.
    return.
  {label,203}.
    {test,is_lt,{f,201},[{x,2},{x,1}]}.
    {allocate,3,3}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,2}}.
    {call,2,{appmon,reset_led,2}}.
    {gc_bif,'-',{f,0},0,[{y,0},{integer,1}],{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{appmon,leds_down,3},3}.

{function,leds_up,3,205}.
  {label,204}.
    {func_info,{atom,appmon},{atom,leds_up},3}.
  {label,205}.
    {test,is_eq,{f,206},[{x,1},{x,2}]}.
    {move,{atom,done},{x,0}}.
    return.
  {label,206}.
    {test,is_lt,{f,204},[{x,1},{x,2}]}.
    {allocate,3,3}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,2}}.
    {call,2,{appmon,set_led,2}}.
    {gc_bif,'+',{f,0},0,[{y,0},{integer,1}],{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{appmon,leds_up,3},3}.

{function,led_on_col,1,208}.
  {label,207}.
    {func_info,{atom,appmon},{atom,led_on_col},1}.
  {label,208}.
    {test,is_lt,{f,209},[{integer,13},{x,0}]}.
    {move,{literal,{255,99,71}},{x,0}}.
    return.
  {label,209}.
    {test,is_lt,{f,210},[{integer,9},{x,0}]}.
    {move,{atom,yellow},{x,0}}.
    return.
  {label,210}.
    {move,{atom,green},{x,0}}.
    return.

{function,led_off_col,1,212}.
  {label,211}.
    {func_info,{atom,appmon},{atom,led_off_col},1}.
  {label,212}.
    {test,is_lt,{f,213},[{integer,13},{x,0}]}.
    {move,{literal,{140,157,178}},{x,0}}.
    return.
  {label,213}.
    {test,is_lt,{f,214},[{integer,9},{x,0}]}.
    {move,{literal,{140,157,178}},{x,0}}.
    return.
  {label,214}.
    {move,{literal,{140,157,178}},{x,0}}.
    return.

{function,reset_led,2,216}.
  {label,215}.
    {func_info,{atom,appmon},{atom,reset_led},2}.
  {label,216}.
    {test,is_eq_exact,{f,217},[{x,1},{integer,0}]}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,217}.
    {allocate,1,2}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call_ext,2,{extfunc,lists,nth,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{appmon,led_off_col,1}}.
    {test_heap,5,1}.
    {put_tuple,2,{x,2}}.
    {put,{atom,fill}}.
    {put,{x,0}}.
    {put_list,{x,2},nil,{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,gs,config,2},1}.

{function,set_led,2,219}.
  {label,218}.
    {func_info,{atom,appmon},{atom,set_led},2}.
  {label,219}.
    {test,is_eq_exact,{f,220},[{x,1},{integer,0}]}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,220}.
    {allocate,1,2}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call_ext,2,{extfunc,lists,nth,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{appmon,led_on_col,1}}.
    {test_heap,5,1}.
    {put_tuple,2,{x,2}}.
    {put,{atom,fill}}.
    {put,{x,0}}.
    {put_list,{x,2},nil,{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,gs,config,2},1}.

{function,bcast,2,222}.
  {label,221}.
    {func_info,{atom,appmon},{atom,bcast},2}.
  {label,222}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,0}}.
    {make_fun2,{appmon,'-bcast/2-fun-0-',2},6,126191672,1}.
    {move,{y,0},{x,1}}.
    {call_ext_last,2,{extfunc,lists,foreach,2},1}.

{function,max,2,224}.
  {label,223}.
    {func_info,{atom,appmon},{atom,max},2}.
  {label,224}.
    {test,is_lt,{f,225},[{x,1},{x,0}]}.
    return.
  {label,225}.
    {move,{x,1},{x,0}}.
    return.

{function,parse_nodes,1,227}.
  {label,226}.
    {func_info,{atom,appmon},{atom,parse_nodes},1}.
  {label,227}.
    {move,nil,{x,1}}.
    {call_only,2,{appmon,parse_nodes,2}}.

{function,parse_nodes,2,229}.
  {label,228}.
    {func_info,{atom,appmon},{atom,parse_nodes},2}.
  {label,229}.
    {test,is_nonempty_list,{f,230},[{x,0}]}.
    {allocate_zero,4,2}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_tuple,{f,231},[{x,2}]}.
    {test,test_arity,{f,231},[{x,2},6]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{x,4}}.
    {get_tuple_element,{x,2},2,{x,5}}.
    {get_tuple_element,{x,2},4,{x,6}}.
    {test,is_eq_exact,{f,231},[{x,0},{atom,mnode}]}.
    {move,{x,1},{y,2}}.
    {move,nil,{x,1}}.
    {move,{x,6},{x,0}}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,3},{y,3}}.
    {call,2,{appmon,parse_apps,2}}.
    {test_heap,6,1}.
    {put_tuple,3,{x,2}}.
    {put,{y,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {put_list,{x,2},{y,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {call_last,2,{appmon,parse_nodes,2},4}.
  {label,230}.
    {test,is_nil,{f,228},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,231}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},4}.

{function,parse_apps,2,233}.
  {label,232}.
    {func_info,{atom,appmon},{atom,parse_apps},2}.
  {label,233}.
    {test,is_nonempty_list,{f,234},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_tuple,{f,232},[{x,2}]}.
    {test,test_arity,{f,232},[{x,2},3]}.
    {test_heap,5,4}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {get_tuple_element,{x,2},1,{x,5}}.
    {put_tuple,2,{x,2}}.
    {put,{x,4}}.
    {put,{x,5}}.
    {put_list,{x,2},{x,1},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{appmon,parse_apps,2}}.
  {label,234}.
    {test,is_nil,{f,232},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.

{function,canvasbutton,7,236}.
  {label,235}.
    {func_info,{atom,appmon},{atom,canvasbutton},7}.
  {label,236}.
    {allocate_zero,9,7}.
    {gc_bif,'+',{f,0},7,[{x,2},{x,4}],{x,7}}.
    {gc_bif,'+',{f,0},8,[{x,3},{x,5}],{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{atom,bg},{x,1}}.
    {move,{x,7},{y,1}}.
    {move,{x,0},{y,3}}.
    {move,{x,5},{y,4}}.
    {move,{x,4},{y,5}}.
    {move,{x,3},{y,6}}.
    {move,{x,2},{y,7}}.
    {move,{x,6},{y,8}}.
    {call_ext,2,{extfunc,gs,read,2}}.
    {test_heap,20,1}.
    {put_tuple,2,{x,3}}.
    {put,{y,1}}.
    {put,{y,0}}.
    {put_list,{x,3},nil,{x,3}}.
    {put_tuple,2,{x,4}}.
    {put,{y,7}}.
    {put,{y,6}}.
    {put_list,{x,4},{x,3},{x,3}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,fill}}.
    {put,{x,0}}.
    {put_list,{x,4},
              {literal,[{buttonpress,true},{buttonrelease,true}]},
              {x,4}}.
    {put_tuple,2,{x,5}}.
    {put,{atom,coords}}.
    {put,{x,3}}.
    {put_list,{x,5},{x,4},{x,2}}.
    {move,{y,3},{x,1}}.
    {init,{y,0}}.
    {init,{y,1}}.
    {move,{atom,rectangle},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {gc_bif,'+',{f,0},1,[{y,6},{y,4}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{y,7},{y,5}],{x,2}}.
    {test_heap,20,3}.
    {move,{x,0},{y,1}}.
    {put_tuple,2,{x,0}}.
    {put,{x,2}}.
    {put,{y,6}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_tuple,2,{x,3}}.
    {put,{y,7}}.
    {put,{y,6}}.
    {put_list,{x,3},{x,0},{x,0}}.
    {put_tuple,2,{x,3}}.
    {put,{y,7}}.
    {put,{x,1}}.
    {put_list,{x,3},{x,0},{x,0}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,0}}.
    {put_list,{x,3},{literal,[{fg,white},{width,2}]},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{atom,line},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {gc_bif,'+',{f,0},1,[{y,6},{y,4}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{y,7},{y,5}],{x,2}}.
    {gc_bif,'+',{f,0},3,[{y,6},{y,4}],{x,3}}.
    {gc_bif,'+',{f,0},4,[{y,7},{y,5}],{x,4}}.
    {test_heap,20,5}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,0}}.
    {put,{x,4}}.
    {put,{y,6}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_tuple,2,{x,4}}.
    {put,{x,2}}.
    {put,{x,3}}.
    {put_list,{x,4},{x,0},{x,0}}.
    {put_tuple,2,{x,3}}.
    {put,{y,7}}.
    {put,{x,1}}.
    {put_list,{x,3},{x,0},{x,0}}.
    {put_tuple,2,{x,3}}.
    {put,{atom,coords}}.
    {put,{x,0}}.
    {put_list,{x,3},{literal,[{fg,{87,87,87}},{width,2}]},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{atom,line},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,{alloc,[{words,0},{floats,1}]},1}.
    {fconv,{y,5},{fr,0}}.
    {fconv,{integer,2},{fr,1}}.
    fclearerror.
    {arithfbif,fdiv,{f,0},[{fr,0},{fr,1}],{fr,2}}.
    {fcheckerror,{f,0}}.
    {fmove,{fr,2},{x,1}}.
    {gc_bif,round,{f,0},2,[{x,1}],{x,1}}.
    {gc_bif,'+',{f,0},2,[{y,7},{x,1}],{x,1}}.
    {test_heap,{alloc,[{words,0},{floats,1}]},2}.
    {fconv,{y,4},{fr,2}}.
    fclearerror.
    {arithfbif,fdiv,{f,0},[{fr,2},{fr,1}],{fr,3}}.
    {fcheckerror,{f,0}}.
    {fmove,{fr,3},{x,2}}.
    {gc_bif,round,{f,0},3,[{x,2}],{x,2}}.
    {gc_bif,'+',{f,0},3,[{y,6},{x,2}],{x,2}}.
    {test_heap,15,3}.
    {put_tuple,2,{x,3}}.
    {put,{x,1}}.
    {put,{x,2}}.
    {put_list,{x,3},nil,{x,3}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,coords}}.
    {put,{x,3}}.
    {put_list,{x,4},
              {literal,[{anchor,c},
                        {buttonpress,true},
                        {buttonrelease,true}]},
              {x,3}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,text}}.
    {put,{y,2}}.
    {move,{x,0},{y,2}}.
    {put_list,{x,4},{x,3},{x,2}}.
    {move,{y,3},{x,1}}.
    {init,{y,3}}.
    {move,{atom,text},{x,0}}.
    {call_ext,3,{extfunc,gs,create,3}}.
    {test_heap,17,1}.
    {put_tuple,9,{x,2}}.
    {put,{atom,canvasbutton}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {put,{y,2}}.
    {put,{y,1}}.
    {put,{y,7}}.
    {put,{y,6}}.
    {put,{y,5}}.
    {put,{y,4}}.
    {move,{x,2},{y,7}}.
    {put_tuple,3,{x,3}}.
    {put,{atom,canvasbutton}}.
    {put,{x,2}}.
    {put,{y,8}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,data}}.
    {put,{x,3}}.
    {move,{y,1},{y,6}}.
    {trim,6,3}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {test_heap,7,0}.
    {put_tuple,3,{x,2}}.
    {put,{atom,canvasbutton}}.
    {put,{y,1}}.
    {put,{y,2}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,data}}.
    {put,{x,2}}.
    {move,{y,0},{x,0}}.
    {init,{y,2}}.
    {trim,1,2}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {move,{y,0},{x,0}}.
    {deallocate,2}.
    return.

{function,press,1,238}.
  {label,237}.
    {func_info,{atom,appmon},{atom,press},1}.
  {label,238}.
    {test,is_tuple,{f,239},[{x,0}]}.
    {test,test_arity,{f,239},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {get_tuple_element,{x,0},3,{x,3}}.
    {test,is_eq_exact,{f,239},[{x,1},{atom,canvasbutton}]}.
    {allocate,1,4}.
    {move,{literal,{fg,{87,87,87}}},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {move,{literal,{fg,white}},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,gs,config,2},1}.
  {label,239}.
    {move,{literal,{badrecord,canvasbutton}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,release,1,241}.
  {label,240}.
    {func_info,{atom,appmon},{atom,release},1}.
  {label,241}.
    {test,is_tuple,{f,242},[{x,0}]}.
    {test,test_arity,{f,242},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {get_tuple_element,{x,0},3,{x,3}}.
    {test,is_eq_exact,{f,242},[{x,1},{atom,canvasbutton}]}.
    {allocate,1,4}.
    {move,{literal,{fg,white}},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,2,{extfunc,gs,config,2}}.
    {move,{literal,{fg,{87,87,87}}},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,gs,config,2},1}.
  {label,242}.
    {move,{literal,{badrecord,canvasbutton}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,module_info,0,244}.
  {label,243}.
    {func_info,{atom,appmon},{atom,module_info},0}.
  {label,244}.
    {move,{atom,appmon},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,get_module_info,1}}.

{function,module_info,1,246}.
  {label,245}.
    {func_info,{atom,appmon},{atom,module_info},1}.
  {label,246}.
    {move,{x,0},{x,1}}.
    {move,{atom,appmon},{x,0}}.
    {call_ext_only,2,{extfunc,erlang,get_module_info,2}}.

{function,'-bcast/2-fun-0-',2,248}.
  {label,247}.
    {func_info,{atom,appmon},{atom,'-bcast/2-fun-0-'},2}.
  {label,248}.
    {test,is_tuple,{f,252},[{x,0}]}.
    {test,test_arity,{f,252},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {get_tuple_element,{x,0},3,{x,4}}.
    {test,is_eq_exact,{f,252},[{x,2},{atom,mnode}]}.
    {allocate,0,5}.
    {test,is_atom,{f,251},[{x,3}]}.
    {select_val,{x,3},
                {f,251},
                {list,[{atom,alive},{f,249},{atom,dead},{f,250}]}}.
  {label,249}.
    {move,{x,4},{x,0}}.
    send.
    {deallocate,0}.
    return.
  {label,250}.
    {move,{atom,ignore},{x,0}}.
    {deallocate,0}.
    return.
  {label,251}.
    {case_end,{x,3}}.
  {label,252}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,'-handle_info/2-fun-3-',2,254}.
  {label,253}.
    {func_info,{atom,appmon},{atom,'-handle_info/2-fun-3-'},2}.
  {label,254}.
    {test,is_tuple,{f,255},[{x,0}]}.
    {test,test_arity,{f,255},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {test,is_eq_exact,{f,255},[{x,2},{atom,mnode}]}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {call_only,2,{appmon,display_addnode,2}}.
  {label,255}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,'-handle_info/2-fun-2-',2,257}.
  {label,256}.
    {func_info,{atom,appmon},{atom,'-handle_info/2-fun-2-'},2}.
  {label,257}.
    {test,is_tuple,{f,258},[{x,0}]}.
    {test,test_arity,{f,258},[{x,0},6]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {get_tuple_element,{x,0},3,{x,4}}.
    {test,is_eq_exact,{f,258},[{x,2},{atom,mnode}]}.
    {move,{atom,true},{x,2}}.
    {move,{x,1},{x,5}}.
    {move,{x,3},{x,1}}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,0}}.
    {call_ext_only,4,{extfunc,appmon_info,load,4}}.
  {label,258}.
    {move,{literal,{badrecord,mnode}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.

{function,'-handle_info/2-fun-1-',2,260}.
  {label,259}.
    {func_info,{atom,appmon},{atom,'-handle_info/2-fun-1-'},2}.
  {label,260}.
    {call_only,2,{appmon,display_setopt,2}}.

{function,'-handle_info/2-fun-0-',2,262}.
  {label,261}.
    {func_info,{atom,appmon},{atom,'-handle_info/2-fun-0-'},2}.
  {label,262}.
    {call_only,2,{appmon,display_setopt,2}}.

{function,'-init/1-fun-1-',2,264}.
  {label,263}.
    {func_info,{atom,appmon},{atom,'-init/1-fun-1-'},2}.
  {label,264}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {call_only,2,{appmon,display_addnode,2}}.

{function,'-init/1-fun-0-',1,266}.
  {label,265}.
    {func_info,{atom,appmon},{atom,'-init/1-fun-0-'},1}.
  {label,266}.
    {call_only,1,{appmon,check_node,1}}.

